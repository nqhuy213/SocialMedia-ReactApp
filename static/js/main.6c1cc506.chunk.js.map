{"version":3,"sources":["pages/NavigationPage/NavigationBar/logo.png","utils/token.js","redux/actions/auth.js","redux/types.js","redux/actions/socket.js","api/base.js","api/post.js","redux/actions/newsFeed.js","utils/user.js","routes/ProtectedRoute.js","api/auth.js","history.js","pages/LoginPage/LoginForm/LoginForm.js","pages/LoginPage/RegisterForm/RegisterForm.js","components/AvatarContainer/AvatarContainer.js","components/GrayHoverContainer/GrayHoverContainer.js","components/CloseButton/CloseButton.js","components/TextBox/TextBox.js","components/ChatItem/ChatItem.js","components/InfiniteScroll/InfiniteScroll.js","components/OursideAlerter/OutsideAlerter.js","components/ChatBox/ChatBox.js","pages/LoginPage/LoginPage.js","pages/NavigationPage/NavigationBar/TabBar/TabBar.js","components/PopupButton/PopupButton.js","components/PopupButtonGroup/PopupButtonGroup.js","components/PanelButton/PanelButton.js","pages/NavigationPage/Panels/AccountPanel/AccountPanel.js","pages/NavigationPage/NavigationBar/NavigationBar.js","components/AskPostBox/AskPostBox.js","pages/NewsFeedPage/PostForm/AddFileSection/AddFileSection.js","pages/NewsFeedPage/PostForm/AddFileSection/index.js","api/upload.js","pages/NewsFeedPage/PostForm/PostForm.js","components/LikeIcon/LikeIcon.js","components/LikeIcon/index.js","utils/attachIsLiked.js","components/CommentItem/style.js","components/CommentItem/CommentItem.js","components/PostItem/PostItem.js","components/PostItemList/PostItemList.js","pages/NewsFeedPage/_usePosts.js","pages/NewsFeedPage/ActiveUserBar/ActiveUserItem/ActiveUserItem.js","pages/NewsFeedPage/ActiveUserBar/ActiveUserBar.js","redux/actions/chat.js","pages/NewsFeedPage/NewsFeedPage.js","pages/NewsFeedPage/_useActiveFriends.js","pages/WatchPage/WatchPage.js","components/ChatSection/ChatSection.js","pages/NavigationPage/NavigationPage.js","styles/theme.js","pages/ProfilePage/components/ProfilePicture/ProfilePicture.js","pages/ProfilePage/components/CoverPhoto/CoverPhoto.js","api/profile.js","components/BrowseButton/BrowseButton.js","components/SaveButton/SaveButton.js","pages/ProfilePage/components/ProfileImageForm/ProfileImageForm.js","pages/ProfilePage/ProfilePage.js","App.js","serviceWorker.js","redux/reducers/NewsFeedReducer.js","redux/reducers/SocketReducer.js","redux/reducers/AuthReducer.js","redux/reducers/ChatsReducer.js","redux/combineReducer.js","redux/reduxStore.js","index.js"],"names":["module","exports","getToken","require","auth","token","localStorage","getItem","loginSuccess","dispatch","type","payload","openNewSocket","serverURL","process","io","BASE_URL","callAPI","endpoint","a","method","params","options","headers","Accept","console","log","sent_options","Authorization","objectToQueryString","body","JSON","stringify","fetch","res","json","result","obj","Object","keys","map","key","trim","join","getPosts","fetchNewsFeedFailure","error","addNewPost","post","addNewPostSuccess","getUserId","jwt","verify","_id","ProtectedRoute","login","register","history","createBrowserHistory","withRouter","openRegisterForm","useDispatch","useState","email","password","loginEntries","setLoginEntries","errors","setErrors","loading","setLoading","handleOnChange","e","name","target","value","handleOnSubmit","message","success","setItem","Segment","className","Form","onSubmit","Message","header","Field","placeholder","onChange","Button","fluid","href","Divider","onClick","RegisterForm","closeRegisterForm","lastName","firstName","day","month","year","gender","registerEntries","setRegisterEntries","handleGenderChange","allExisted","dobString","dt","Date","parse","global","dob","dateOfBirth","Grid","Row","columns","Column","Input","Array","x","i","Radio","label","checked","ALink","styled","Link","AContainer","div","AImage","Image","props","scale","size","AvatarContainer","src","online","meta","userId","isAvatar","disable","to","preventDefault","circular","GrayContainer","fitted","GrayHoverContainer","children","CloseIcon","Icon","basic","primary","theme","colors","primaryblue","lightgray","CloseButton","CustomSegment","section","color","StyledTextBox","backgroundColor","width","typography","fontFamily","pxToRem","CustomEmojiIcon","CustomEmojiButton","TextBox","React","forwardRef","ref","backgroundcolor","rows","maxRows","as","TextareaAutosize","icon","handleemojibuttonclick","defaultProps","GChatItemWrapper","HChatItemWrapper","ChatTextHolder","host","ChatItem","text","InfiniteScroll","observer","useRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","bottomCallback","observe","Children","child","reverse","cloneElement","count","OutsideAlerter","wrapperRef","useEffect","handleClickOutside","event","contains","onOutsideClicked","document","addEventListener","removeEventListener","ImageIcon","ChatItemContainer","input","ChatBoxWapprer","ChatBoxHeader","CustomCloseButton","ChatBoxFooter","ChatSection","EmojiPickerContainer","Picker","ChatBox","setText","emojiPicker","setEmojiPicker","textBoxRef","chatSectionRef","onEnterPressed","keyCode","shiftKey","author","sendMessage","room","toggleEmojiPicker","blur","focus","scrollTop","scrollHeight","guest","profileImageURL","onClose","onEmojiClick","emojiObject","emoji","disableSearchBar","messages","onKeyDown","LoginPage","registerForm","state","setState","Modal","dimmer","open","TabBar","activePage","handleChangePage","selectedTab","setSelectedTab","home","watch","marketplace","group","game","PopupButton","setOpen","triggerButton","Popup","trigger","includes","PopupButtonGroup","PanelButton","title","AccountPanel","user","useSelector","Auth","socket","Socket","closeSocket","removeItem","window","location","reload","AvatarButton","selected","deEmphasizedBlueHoverButton","popupHoverBackground","deEmphasizedBlueButton","NavigatioBar","alt","logo","Search","labelPosition","avatar","AskPostBox","openPostForm","Wrapper","Heading","h4","IconWrapper","FileIcon","FileInput","AddFileSection","imageInputRef","click","id","accept","handleImageChosen","uploadImage","formData","PostFormHeaderContainer","CloseFormContainer","PostFormHeader","h1","CloseImageContainer","ImagePreview","ShrinkTextArea","hasImage","TextArea","PostForm","closePostForm","postDescription","setPostDescription","postImageUrl","setPostImageUrl","postImageFile","setPostImageFile","FormData","append","imageURL","data","image","filename","description","tabIndex","postImage","reader","FileReader","files","readAsDataURL","onloadend","disabled","LikeIcon","IsLiked","likeList","likes","l","likedBy","toString","CommentItemWrapper","LikeCountWrapper","LikeCountLabel","span","CommentActionItem","CommentLikeAction","isLiked","darkgray","CommentReplyAction","CommentHolder","CommenterNameLabel","CommentDescriptionLabel","CommentActionContainer","DateTimeLabel","CommentItem","comment","postedBy","length","likeComment","postId","commentId","moment","createdAt","fromNow","PostItem","likePost","commentPost","commentText","setCommentText","comments","showComment","setShowComment","handleLike","handleComment","commentData","handleShowComment","commentList","cmt","PostItemList","items","getMorePost","itemsList","usePosts","posts","NewsFeed","nextCount","then","catch","on","updatePostSuccess","updateNewsFeedPost","emit","ActiveUserItem","ActiveUserBar","activeUsers","openChatWith","participants","chat","splice","undefined","openChat","NewsFeedPage","activeFriends","setOpenPostForm","WatchPage","ChatSectionWrapper","ChatBoxContainer","chats","inbox","closeChatBox","propsTypes","PropTypes","array","func","ChatSectionContainer","NavigationPage","Page","page","inboxes","Chat","fetchUser","activeFriend","deleteActiveFriend","closeChat","primaryblueHover","popupButtonBackground","pageBackground","grayIcon","px","ProfileImageWrapper","EditProfileImageButton","ProfileImage","ProfilePicture","openProfileImageForm","CoverImageWrapper","CoverImage","EditCoverButton","CoverPhoto","rounded","getProfile","editProfileImage","SaveButt","SaveButton","ProfileImageFormHeaderWrapper","ClosePIFContainer","PIFormHeader","PIFormFooter","SaveButtonWrapper","ProfileImgBrowseButton","ProfileImageFileInput","ProfileImageForm","profileImagePreview","setProfileImagePreview","profileImageInputRef","closeProfileImageForm","handleSubmitImage","ProfilePageHeader","HeaderImagesContainer","CoverPhotoContainer","ProfilePictureContainer","UserNameLabel","ProfileNavBar","ProfilePage","useParams","currentUser","setCurrentUser","setAuth","profileImageForm","setProfileImageForm","profileImageFile","setProfileImageFile","fetchProfile","handleProfileImageChosen","file","handleSubmitProfileImage","coverImageURL","localAuth","withTheme","userLoggedIn","exact","path","Boolean","hostname","match","initialState","hasMore","socketConnected","combineReducers","action","filter","f","index","findIndex","c","slice","inb","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c1cc506.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.43f9ef05.png\";","const jwt = require('jsonwebtoken')\r\n\r\n/**\r\n * Store token got from server in localStorage with expiry\r\n * @param {string} token - Token returned from server\r\n * @param {string} ttl - Time to live\r\n */\r\nexport const setToken = (auth, token) => {\r\n  localStorage.setItem(auth, token)\r\n}\r\n\r\n/**\r\n * Check if token exist in localStorage\r\n */\r\nexport const getToken = (auth) => {\r\n  const token = localStorage.getItem(auth)\r\n  // if the item doesn't exist, return null\r\n  if (!token) {\r\n    return ''\r\n  }\r\n  return token\r\n}\r\n\r\nexport const deleteToken = (auth) => {\r\n  localStorage.removeItem(auth)\r\n}\r\n\r\n\r\n\r\nexport const generateToken = (object) => {\r\n  const {_id} = object\r\n  const payload = {\r\n    _id\r\n  }\r\n  return jwt.sign(payload, process.env.REACT_APP_JWT_SECRET_KEY)\r\n}\r\n\r\nexport const verifyToken = (token) => {\r\n  const _id = jwt.verify(token, process.env.REACT_APP_JWT_SECRET_KEY)\r\n  return _id\r\n}","import * as types from '../types'\r\n\r\nexport function loginSuccess(token) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: types.LOGIN_SUCCESS,\r\n      payload: token\r\n    })\r\n  }\r\n}\r\n\r\nexport function logoutSuccess(){\r\n  return dispatch => {\r\n    dispatch({\r\n      type: types.LOGOUT_SUCCESS\r\n    })\r\n  }\r\n}\r\n\r\nexport function fetchUser(user) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: types.FETCH_USER,\r\n      payload: user\r\n    })\r\n  }\r\n}","/**Newsfeed page actions */\r\nexport const FETCH_NEWSFEED_BEGIN = 'FETCH_NEWSFEED_BEGIN'\r\nexport const FETCH_NEWSFEED_SUCCESS = 'FETCH_NEWSFEED_SUCCESS'\r\nexport const FETCH_NEWSFEED_FAILURE = 'FETCH_NEWSFEED_FAILURE'\r\nexport const UPDATE_NEWSFEED_POST_SUCCESS = 'UPDATE_POST_SUCCESS'\r\nexport const FETCH_NEWSFEED_MORE_SUCCESS = 'FETCH_NEWSFEED_MORE_SUCCESS'\r\nexport const ADD_NEW_POST = 'ADD_NEW_POST'\r\n\r\nexport const FETCH_ACTIVE_FRIENDS = 'FETCH_ACTIVE_FRIENDS'\r\nexport const UPDATE_ACTIVE_FRIEND = 'UPDATE_ACTIVE_FRIEND'\r\nexport const DELETE_ACTIVE_FRIEND = 'DELETE_ACTIVE_FRIEND'\r\n\r\n/**Socket actions */\r\nexport const OPEN_NEW_SOCKET = 'OPEN_NEW_SOCKET'\r\nexport const CLOSE_SOCKET = 'CLOSE_SOCKET'\r\n\r\n/**Authentication actions */\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const FETCH_USER = 'FETCH_USER'\r\n\r\n/**Chat actions */\r\nexport const OPEN_CHAT = 'OPEN_CHAT'\r\nexport const UPDATE_CHAT = 'UPDATE_CHAT'\r\nexport const CLOSE_CHAT = 'CLOSE_CHAT'","import * as types from '../types'\r\nimport io from 'socket.io-client'\r\n\r\nexport const openNewSocket = (serverURL = process.env.REACT_APP_API_URL) => {\r\n  return dispatch => {\r\n    try{\r\n      const socket = io(serverURL)\r\n      return dispatch({\r\n        type: types.OPEN_NEW_SOCKET,\r\n        payload: socket\r\n      })\r\n    }catch{\r\n      \r\n    }\r\n  }\r\n}\r\n\r\nexport const closeSocket = (socket) => {\r\n  return dispatch => {\r\n    socket.disconnect()\r\n    return dispatch({\r\n      type: types.CLOSE_SOCKET,\r\n      payload: null\r\n    })\r\n  }\r\n}","import {getToken} from '../utils/token';\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n/**\r\n *\r\n * @param {string} endpoint - API endpoint\r\n * @param {string} method - HTTP method\r\n * @param {string} params - request parameters\r\n */\r\nexport const callAPI = async (\r\n  endpoint,\r\n  method = 'GET',\r\n  params,\r\n  options = { headers: {Accept: 'application/json', 'Content-Type': 'application/json'}}\r\n) => {\r\n  console.log(`${BASE_URL}`);\r\n  const token = getToken('token');\r\n  const sent_options = {\r\n    ...options,\r\n    method,\r\n    headers: {\r\n      ...options.headers,\r\n      Authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n\r\n  if (params) {\r\n    if (method === 'GET') {\r\n      //Put the params into endpoint\r\n      endpoint += '?' + objectToQueryString(params);\r\n    } else {\r\n      //If the method is not GET, put params to request body\\\r\n      if(!options.headers){\r\n        sent_options.body = params\r\n      }\r\n      else if (options.headers[\"Content-Type\"] === 'application/json'){\r\n        sent_options.body = JSON.stringify(params)\r\n      }\r\n    }\r\n  }\r\n  const res = await fetch(`${BASE_URL}${endpoint}`, sent_options);\r\n  const result = await res.json();\r\n  return result;\r\n};\r\n\r\n/**\r\n * Turn object into query string\r\n * @param {object} obj - search parameterd object\r\n */\r\nfunction objectToQueryString(obj) {\r\n  return Object.keys(obj)\r\n    .map((key) => (obj[key].trim() !== '' ? key + '=' + obj[key].trim() : ''))\r\n    .join('&');\r\n}\r\n","import {callAPI} from './base'\r\n\r\nexport const getPosts = (params) => callAPI('post', 'GET', params)\r\n\r\nexport const getPostComments = (params) => callAPI('post/comment', 'GET', params)\r\n\r\n\r\nexport const postPost = (body) => callAPI('post', 'POST', body)\r\n\r\nexport const likePost = (body) => callAPI('post/like', 'POST', body)","import * as types from '../types'\r\nimport { getPosts} from '../../api/post'\r\n\r\nfunction fetchNewsFeedBegin() {\r\n  return {\r\n    type: types.FETCH_NEWSFEED_BEGIN\r\n  }\r\n}\r\n\r\nfunction fetchNewsFeedSucess(data) {\r\n  return {\r\n    type: types.FETCH_NEWSFEED_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nfunction fetchNewsFeedMoreSuccess(data) {\r\n  return {\r\n    type: types.FETCH_NEWSFEED_MORE_SUCCESS,\r\n    payload: data\r\n  }\r\n}\r\n\r\nfunction fetchNewsFeedFailure(error) {\r\n  return {\r\n    type: types.FETCH_NEWSFEED_FAILURE,\r\n    payload: {error}\r\n  }\r\n}\r\n\r\nfunction addNewPostSuccess(post){\r\n  return{\r\n    type: types.ADD_NEW_POST,\r\n    payload: {post}\r\n  }\r\n}\r\n\r\nfunction updatePostSuccess(post) {\r\n  return{\r\n    type: types.UPDATE_NEWSFEED_POST_SUCCESS,\r\n    payload: {post}\r\n  }\r\n}\r\nexport function fetchNewsFeed(){\r\n  return dispatch => {\r\n    dispatch(fetchNewsFeedBegin())\r\n    return getPosts().then(\r\n      res => {\r\n        dispatch(fetchNewsFeedSucess(res.data))\r\n      }\r\n    ).catch(error => {\r\n      return dispatch(fetchNewsFeedFailure(error))\r\n    })\r\n  }\r\n}\r\n\r\nexport function fetchNewsFeedMore(params) {\r\n  return dispatch => {\r\n    dispatch(fetchNewsFeedBegin())\r\n    return getPosts(params).then(data => {\r\n      dispatch(fetchNewsFeedMoreSuccess(data))\r\n    }).catch(error => {\r\n      return dispatch(fetchNewsFeedFailure(error))\r\n    })\r\n  }\r\n}\r\n\r\nexport function addNewPost(post) {\r\n  return dispatch => {\r\n    return dispatch(addNewPostSuccess(post))\r\n  }\r\n}\r\n\r\nexport function updateNewsFeedPost(post) {\r\n  return dispatch => {\r\n    dispatch(updatePostSuccess(post))\r\n  }\r\n}\r\n\r\nexport function fetchActiveFriends(activeFriends) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: types.FETCH_ACTIVE_FRIENDS,\r\n      payload: activeFriends\r\n    })\r\n  }\r\n}\r\n\r\nexport function updateActiveFriend (activeFriend) {\r\n  return dispatch => {\r\n    dispatch ({\r\n      type: types.UPDATE_ACTIVE_FRIEND,\r\n      payload: activeFriend\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteActiveFriend (userId) {\r\n  return dispatch => {\r\n    dispatch ({\r\n      type: types.DELETE_ACTIVE_FRIEND,\r\n      payload: userId\r\n    })\r\n  }\r\n}","import jwt from 'jsonwebtoken'\r\nimport { getToken } from './token'\r\n\r\nexport const getUserId = () => {\r\n  const token = getToken('token')\r\n  const userId = jwt.verify(token, process.env.REACT_APP_JWT_SECRET_KEY)\r\n  \r\n  return userId._id\r\n}","import React, {useEffect } from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { fetchUser, loginSuccess } from '../redux/actions/auth';\r\nimport { getToken } from '../utils/token';\r\nimport { openNewSocket } from '../redux/actions/socket';\r\nimport { fetchActiveFriends, updateActiveFriend, deleteActiveFriend } from '../redux/actions/newsFeed'\r\nimport {getUserId} from '../utils/user'\r\n\r\n\r\nfunction ProtectedRoute({ component: Component, auth, redir, page, activePage, ...rest }) {\r\n  return (\r\n      <Route {...rest} render={(props) => (\r\n        auth === true\r\n          ? <Component page={page} activePage={activePage} {...props}/>\r\n          : <Redirect to={redir} />\r\n      )} />\r\n  )\r\n}\r\n\r\n\r\nexport default ProtectedRoute\r\n","import { callAPI } from \"./base\"\r\n\r\nexport const login = async (body) => callAPI('auth/login', 'POST', body)\r\n\r\nexport const register = async (body) => callAPI('auth/register', 'POST', body)\r\n","import { createBrowserHistory } from \"history\";\r\nexport const history = createBrowserHistory()","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"./LoginForm.scss\";\r\nimport { Segment, Form, Button, Divider, Message } from \"semantic-ui-react\";\r\nimport { login } from \"../../../api/auth\";\r\nimport { setToken } from \"../../../utils/token\";\r\nimport PropTypes from \"prop-types\";\r\nimport { history } from \"../../../history\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginSuccess } from \"../../../redux/actions/auth\";\r\nimport { openNewSocket } from \"../../../redux/actions/socket\";\r\n\r\nfunction LoginForm({ openRegisterForm, ...props }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [loginEntries, setLoginEntries] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const handleOnChange = (e) => {\r\n    const name = e.target.name;\r\n    setLoginEntries({ ...loginEntries, [name]: e.target.value });\r\n  };\r\n\r\n  const handleOnSubmit = async () => {\r\n    setErrors({});\r\n    if (!loginEntries.email || !loginEntries.password) {\r\n      if (!loginEntries.email)\r\n        setErrors((errors) => ({\r\n          ...errors,\r\n          email: true,\r\n          message: \"Please fill in all the fields\",\r\n        }));\r\n      if (!loginEntries.password)\r\n        setErrors((errors) => ({\r\n          ...errors,\r\n          password: true,\r\n          message: \"Please fill in all the fields\",\r\n        }));\r\n    } else {\r\n      setLoading(true)\r\n      const result = await login(loginEntries);\r\n      setLoading(false)\r\n      if (result.success) {\r\n        setToken(\"token\", result.token);\r\n        dispatch(openNewSocket())\r\n        dispatch(loginSuccess(result.token));\r\n      } else {\r\n        setErrors({ message: result.message });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"form-container\">\r\n      <Form\r\n        loading={loading}\r\n        className=\"form-entries\"\r\n        onSubmit={handleOnSubmit}\r\n        error={errors.message ? true : false}\r\n      >\r\n        {errors.message && <Message error={true} header={errors.message} />}\r\n        <Form.Field error={errors.email}>\r\n          <input\r\n            placeholder=\"Email\"\r\n            className=\"login-entry\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={loginEntries.email}\r\n            onChange={handleOnChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field error={errors.password}>\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            className=\"login-entry\"\r\n            name=\"password\"\r\n            value={loginEntries.password}\r\n            onChange={handleOnChange}\r\n          />\r\n        </Form.Field>\r\n        <Button className=\"login-button\" fluid type=\"submit\">\r\n          Log in\r\n        </Button>\r\n      </Form>\r\n\r\n      <a href=\"#\" className=\"forget-link\">\r\n        Forget password?\r\n      </a>\r\n      <Divider />\r\n      <Button className=\"open-register-button\" onClick={openRegisterForm}>\r\n        Create new account\r\n      </Button>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  openRegisterForm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, {useState} from 'react';\r\nimport './RegisterForm.scss';\r\nimport {\r\n  Segment,\r\n  Divider,\r\n  Grid,\r\n  Form,\r\n  Radio,\r\n  Button,\r\n  Label,\r\n  Message,\r\n} from 'semantic-ui-react';\r\nimport {register} from '../../../api/auth';\r\n\r\nexport default function RegisterForm({closeRegisterForm}) {\r\n  const [registerEntries, setRegisterEntries] = useState({\r\n    lastName: '',\r\n    firstName: '',\r\n    email: '',\r\n    password: '',\r\n    day: 'Day',\r\n    month: 'Month',\r\n    year: 'Year',\r\n    gender: 'male',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleOnChange = (e) => {\r\n    const name = e.target.name;\r\n    setRegisterEntries({...registerEntries, [name]: e.target.value});\r\n  };\r\n\r\n  const handleGenderChange = (e, {value}) => {\r\n    setRegisterEntries({...registerEntries, gender: value});\r\n  };\r\n\r\n  const allExisted = () => {\r\n    var result = true\r\n    setErrors({})\r\n    if (registerEntries.lastName.trim() === ''){\r\n      setErrors((errors) => ({\r\n        ...errors,\r\n        lastName: true,\r\n      }));\r\n      result = false\r\n    }\r\n      \r\n    if (registerEntries.firstName.trim() === ''){\r\n      setErrors((errors) => ({\r\n        ...errors,\r\n        firstName: true,\r\n      }));\r\n      result = false\r\n    }\r\n\r\n    if (registerEntries.email.trim() === ''){\r\n      setErrors((errors) => ({\r\n        ...errors,\r\n        email: true,\r\n      }));\r\n      result = false\r\n    }\r\n    if (registerEntries.password.trim() === ''){\r\n      setErrors((errors) => ({\r\n        ...errors,\r\n        password: true,\r\n      }));\r\n      result = false\r\n    }\r\n    return result\r\n  }\r\n\r\n\r\n\r\n  const handleOnSubmit = async (e) => {\r\n    const {lastName, firstName, email, password, day, month, year, gender} = registerEntries\r\n    const dobString = `${month}/${day}/${year}`\r\n    var dt = Date.parse(dobString)\r\n    var dob;\r\n    if(!allExisted()){\r\n      setErrors(errors => ({...errors, global:'Please fill in all the fields'}))\r\n    }\r\n    else if (!dt) {\r\n      console.log(dobString);\r\n      console.log(dt);\r\n      setErrors(errors => ({...errors, global:'Date of birth must a valid date'}))\r\n    }else{\r\n      dob = new Date(dt)\r\n      var body = {\r\n        lastName, firstName, email, password, dateOfBirth: dob, gender\r\n      }\r\n      const result = await register(body)\r\n      if(result.success){\r\n        closeRegisterForm()\r\n        \r\n      }else{\r\n        setErrors({...errors, global: result.message})\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment className=\"form-container\">\r\n      <h1 className=\"title\">Register</h1>\r\n      <p className=\"subtitle\">Quick and easy</p>\r\n      <Divider />\r\n      <Form onSubmit={handleOnSubmit} error={errors.global ? true : false}>\r\n        {errors.global && <Message error header={errors.global} />}\r\n        <Grid>\r\n          <Grid.Row columns={2} className=\"grid-row\">\r\n            <Grid.Column>\r\n              <Form.Input\r\n                error={errors.lastName}\r\n                placeholder=\"Last Name\"\r\n                className=\"register-entry\"\r\n                name=\"lastName\"\r\n                onChange={handleOnChange}\r\n                value={registerEntries.lastName}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form.Input\r\n                error={errors.firstName}\r\n                placeholder=\"First Name\"\r\n                className=\"register-entry\"\r\n                value={registerEntries.firstName}\r\n                name=\"firstName\"\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row columns={1} className=\"grid-row\">\r\n            <Grid.Column>\r\n              <Form.Input\r\n                error={errors.email}\r\n                placeholder=\"Email\"\r\n                className=\"register-entry\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={handleOnChange}\r\n                value={registerEntries.email}\r\n              />\r\n              <Form.Input\r\n                error={errors.password}\r\n                placeholder=\"Password\"\r\n                className=\"register-entry\"\r\n                value={registerEntries.password}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                onChange={handleOnChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <label className=\"description-label\">Date of Birth</label>\r\n          <Grid.Row columns={3} className=\"grid-row\">\r\n            <Grid.Column className=\"grid-col\">\r\n              <select\r\n                name=\"day\"\r\n                placeholder=\"Day\"\r\n                className=\"register-entry dob\"\r\n                value={registerEntries.day}\r\n                onChange={handleOnChange}\r\n                name=\"day\"\r\n              >\r\n                <option value=\"day\">Day</option>\r\n                {[...Array(31)].map((x, i) => {\r\n                  return (\r\n                    <option key={i} value={(i + 1) < 10 ? `0${i + 1}` : `${i+1}`}>\r\n                      {i + 1}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </Grid.Column>\r\n            <Grid.Column className=\"grid-col\">\r\n              <select\r\n                placeholder=\"Month\"\r\n                className=\"register-entry dob\"\r\n                value={registerEntries.month}\r\n                onChange={handleOnChange}\r\n                name=\"month\"\r\n              >\r\n                <option value=\"Month\">Month</option>\r\n                <option value=\"01\">January</option>\r\n                <option value=\"02\">February</option>\r\n                <option value=\"03\">March</option>\r\n                <option value=\"04\">April</option>\r\n                <option value=\"05\">May</option>\r\n                <option value=\"06\">June</option>\r\n                <option value=\"07\">July</option>\r\n                <option value=\"08\">August</option>\r\n                <option value=\"09\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n              </select>\r\n            </Grid.Column>\r\n            <Grid.Column className=\"grid-col\">\r\n              <select\r\n                placeholder=\"Year\"\r\n                className=\"register-entry dob\"\r\n                value={registerEntries.year}\r\n                onChange={handleOnChange}\r\n                name=\"year\"\r\n              >\r\n                <option value=\"year\">Year</option>\r\n                {[...Array(100)].map((x, i) => {\r\n                  return (\r\n                    <option key={2020 - i} value={`${2020 - i}`}>\r\n                      {2020 -  i}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <label className=\"description-label\">Gender</label>\r\n          <Grid.Row columns={2} className=\"grid-row\">\r\n            <Grid.Column>\r\n              <Radio\r\n                label=\"Male\"\r\n                name=\"gender\"\r\n                className=\"register-entry\"\r\n                value=\"male\"\r\n                checked={registerEntries.gender === 'male'}\r\n                onChange={handleGenderChange}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Radio\r\n                label=\"Female\"\r\n                name=\"gender\"\r\n                checked={registerEntries.gender === 'female'}\r\n                className=\"register-entry\"\r\n                value=\"female\"\r\n                onChange={handleGenderChange}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <Button className=\"register-button\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Image } from \"semantic-ui-react\";\r\nimport \"./AvatarContainer.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ALink = styled(Link)`\r\n  text-decoration: none;\r\n  color: initial;\r\n  :hover{\r\n    text-decoration: none;\r\n    color: initial;\r\n  };\r\n  \r\n`\r\nconst AContainer = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n  margin-top: 5px;\r\n  position: relative;\r\n`;\r\n\r\nconst AImage = styled(Image)`\r\n  width: ${(props) => {\r\n    var px = 40\r\n    var scale\r\n    switch(props.size){\r\n      case 'tiny':\r\n        scale = 1\r\n      case 'small':\r\n        scale = 3\r\n      default:\r\n        scale = 1\r\n    }\r\n    return `${px*scale}px`\r\n  }} !important;\r\n\r\n  height: ${(props) => {\r\n    var px = 40\r\n    var scale\r\n    switch(props.size){\r\n      case 'tiny':\r\n        scale = 1\r\n      case 'small':\r\n        scale = 3\r\n      default:\r\n        scale = 1\r\n    }\r\n    return `${px*scale}px`\r\n  }} !important;\r\n`\r\n\r\nexport default function AvatarContainer({\r\n  src,\r\n  name,\r\n  online,\r\n  meta,\r\n  size,\r\n  isAvatar,\r\n  userId,\r\n  disable\r\n}) {\r\n  return (\r\n    <ALink to={`/profile/${userId}`} onClick={(e) => {disable && e.preventDefault()}}>\r\n      <AContainer>\r\n        <div className=\"avatar-img-container\">\r\n          <AImage\r\n            src={\r\n              src\r\n                ? src\r\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n            }\r\n            size={size}\r\n            circular\r\n          />\r\n        </div>\r\n        {online ? <span className=\"online-indicator\"></span> : null}\r\n        {name || meta ? (\r\n          <div className=\"avatar-infomation-container\">\r\n            {name ? <span className=\"avatar-name-label\">{name}</span> : null}\r\n            <span className=\"avatar-meta-label\">{meta}</span>\r\n          </div>\r\n        ) : null}\r\n      </AContainer>\r\n    </ALink>\r\n  );\r\n}\r\n\r\nAvatarContainer.propTypes = {\r\n  src: PropTypes.string,\r\n  name: PropTypes.string,\r\n  meta: PropTypes.string,\r\n  online: PropTypes.bool,\r\n  size: PropTypes.oneOf([\r\n    \"tiny\",\r\n    \"small\",\r\n    \"mini\",\r\n    \"medium\",\r\n    \"large\",\r\n    \"huge\",\r\n    \"big\",\r\n  ]),\r\n  userId: PropTypes.string,\r\n  disable: PropTypes.bool,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GrayContainer = styled.div`\r\n  padding-top: 3px;\r\n  padding-bottom: 3px;\r\n  padding-left: 6px;\r\n  border-radius: 10px;\r\n  width: ${props => props.fitted ? 'none' : '100%'};\r\n  padding-right: ${props => props.fitted ? '6px' : 'none'};\r\n  :hover {\r\n    background-color:  rgba(204, 204, 204, 0.2);\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport default function GrayHoverContainer(props) {\r\n  return <GrayContainer onClick={props.onClick} fitted={props.fitted}>{props.children}</GrayContainer>;\r\n}\r\nGrayHoverContainer.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  fitted: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components'\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nconst CloseIcon = styled(Icon) `\r\n  box-shadow: none !important;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  background-color:  ${props => !props.basic && '#e8eaeb'};\r\n  color: ${props => props.primary && props.theme.colors.primaryblue};\r\n  :hover{\r\n    background-color: ${props => props.theme.colors.lightgray};\r\n  }\r\n`\r\n\r\nexport default function CloseButton(props) {\r\n  return (\r\n    <CloseIcon primary=\"true\" basic=\"true\" name=\"close\" circular onClick={props.onClick}/>\r\n  )\r\n}\r\n\r\nCloseButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  primary: PropTypes.bool,\r\n  basic: PropTypes.bool,\r\n};\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled, {css} from 'styled-components'\r\nimport TextareaAutosize from 'react-autosize-textarea/lib'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\n\r\n\r\nexport const CustomSegment = styled.section`\r\n  padding-left: 10px;\r\n  padding-right: 0px;\r\n  padding-top: 2px;\r\n  padding-bottom: 2px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  background-color: ${(props) => {\r\n    return props.theme.colors[props.color]\r\n  }};\r\n  border-radius: 15px;\r\n  width: ${(props) => !props.fluid && 'fit-content'};\r\n  height: 'fit-content';\r\n  display: flex;\r\n  align-items:center;\r\n`\r\n\r\nconst StyledTextBox = styled(\r\n  ({ backgroundColor, ...props }) => (\r\n    <TextareaAutosize {...props} />\r\n  )\r\n)\r\n`\r\n  border: none;\r\n  resize: none;\r\n  padding: 0;\r\n  background-color: transparent;\r\n  color: ${(props) => {\r\n    switch (props.color) {\r\n      case 'darkgray':\r\n        return 'black !important'\r\n      case 'darkblue':\r\n        return 'white'\r\n      default:\r\n        return 'black'\r\n    }\r\n  }};\r\n  width: ${(props) => props.width};\r\n  font-family: ${(props) =>\r\n    props.theme.typography.fontFamily};\r\n  font-size: ${(props) =>\r\n    props.theme.typography.pxToRem(15)};\r\n  font-weight: 500;\r\n  overflow: hidden;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`\r\nconst CustomEmojiIcon = styled(Icon)`\r\n  color: ${props => props.theme.colors.primaryblue};\r\n`\r\nconst CustomEmojiButton = styled(Button)`\r\n  margin: 0px !important;\r\n  background-color: transparent !important;\r\n  padding: 0.5rem !important;\r\n  :hover{\r\n    background-color:  rgba(204, 204, 204, 0.2) !important;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst TextBox = React.forwardRef((props, ref) => {\r\n  const {\r\n    backgroundcolor,\r\n    width,\r\n    rows,\r\n    className,\r\n    maxRows,\r\n    fluid\r\n  } = props\r\n\r\n  \r\n\r\n  return (\r\n      <CustomSegment color={backgroundcolor} fluid={fluid}>\r\n        <StyledTextBox\r\n          as={TextareaAutosize}\r\n          color={backgroundcolor}\r\n          className={className}\r\n          width={width}\r\n          rows={rows || 1}\r\n          maxRows={maxRows}\r\n          ref={ref}\r\n          {...props}\r\n        />\r\n        <CustomEmojiButton icon circular onClick={props.handleemojibuttonclick}>\r\n          <CustomEmojiIcon name='smile' size='large'/>\r\n        </CustomEmojiButton>\r\n      </CustomSegment>\r\n  )\r\n})\r\n\r\nTextBox.propTypes = {\r\n  /**\r\n   * A textbox can have different background colors.\r\n   */\r\n  backgroundcolor: PropTypes.oneOf([\r\n    'lightgray',\r\n    'lightblue',\r\n    'darkblue',\r\n    'darkgray'\r\n  ]),\r\n\r\n  /**\r\n   * Additional classes.\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * A textbox can take the width of its container.\r\n   */\r\n  fluid: PropTypes.any,\r\n\r\n  /**\r\n   * A textbox can have a maximum number of rows to display.\r\n   */\r\n  maxRows: PropTypes.any,\r\n\r\n  /**\r\n   * A textbox can have an initial number of rows.\r\n   */\r\n  rows: PropTypes.number,\r\n\r\n  /** Specify the width of the textbox. */\r\n  width: PropTypes.string\r\n}\r\n\r\nTextBox.defaultProps = {\r\n  width: '200px',\r\n  backgroundcolor: 'lightgray'\r\n}\r\n\r\nexport default TextBox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Segment } from 'semantic-ui-react'\r\nimport AvatarContainer from '../AvatarContainer/AvatarContainer'\r\n\r\nconst GChatItemWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction:row;\r\n  margin: 10px 0px;\r\n\r\n`\r\nconst HChatItemWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  flex-direction:column;\r\n  margin: 10px 0px;\r\n`\r\n\r\nconst ChatTextHolder = styled(Segment)`\r\n  margin: 0 !important;\r\n  padding-top: 5px !important;\r\n  padding-bottom: 5px !important;\r\n  background-color: ${props => props.host ? props.theme.colors.primaryblue : props.theme.colors.lightgray} !important;\r\n  border: none !important;\r\n  border-radius: 15px !important;\r\n  box-shadow: none !important;\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n  justify-content: center;\r\n  width: fit-content;\r\n  max-width: 70%;\r\n  color: ${props => props.host ? 'white' : 'black'};\r\n  word-break: break-word;\r\n  margin-bottom: ${props => props.host ? '0px' : '5px !important'};\r\n`\r\n\r\n\r\nexport default function ChatItem(props) {\r\n  const {host} = props\r\n  if(host){\r\n    return(\r\n      <HChatItemWrapper>\r\n        <ChatTextHolder host=\"true\">\r\n          {props.text}\r\n        </ChatTextHolder>\r\n      </HChatItemWrapper>\r\n    )\r\n  }else{\r\n    return(\r\n      <GChatItemWrapper>\r\n        <AvatarContainer isAvatar/>\r\n        <ChatTextHolder>\r\n          {props.text}\r\n        </ChatTextHolder>\r\n      </GChatItemWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nChatItem.propTypes = {\r\n  host: PropTypes.bool,\r\n}","import React, { Fragment, useRef, useCallback} from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function InfiniteScroll(props) {\r\n  const observer = useRef();\r\n  const lastElementCallback = useCallback(node =>{\r\n    if (observer.current) observer.current.disconnect()\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if(entries[0].isIntersecting){\r\n        props.bottomCallback()\r\n      }\r\n    })\r\n    if(node) observer.current.observe(node)\r\n  }, [])\r\n\r\n\r\n  let ref = lastElementCallback\r\n  return (\r\n    <Fragment>\r\n      {React.Children.map(props.children, (child, i) => {\r\n        if(props.reverse){\r\n          if(i == 0) {\r\n            return React.cloneElement(child, {ref})\r\n          }else{\r\n            return child\r\n          }\r\n        }else{\r\n          if(React.Children.count(props.children) === i + 1) {\r\n            return React.cloneElement(child, {ref})\r\n          }else{\r\n            return child\r\n          }\r\n        }\r\n        \r\n      })}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nInfiniteScroll.propTypes = {\r\n  reverse: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n  bottomCallback: PropTypes.func.isRequired,\r\n};\r\n","/**\r\n * A component to handle clik outside of a div\r\n * Reference: https://stackoverflow.com/questions/32553158/detect-click-outside-react-component?fbclid=IwAR0NczF2u2ErdcMpRj5Ba5lJ9XtKRO2SvQArikS48oLZq06zBF2IUmCjfLA\r\n */\r\n\r\nimport React, {useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function OutsideAlerter(props) {\r\n  const wrapperRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n        props.onOutsideClicked(event);\r\n      }\r\n    }\r\n    // Bind the event listener\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [wrapperRef]);\r\n\r\n  return <div ref={wrapperRef}>{props.children}</div>;\r\n}\r\n\r\nOutsideAlerter.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  onOutsideClicked: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport AvatarContainer from \"../AvatarContainer/AvatarContainer\";\r\nimport { getUserId } from \"../../utils/user\";\r\nimport GrayHoverContainer from \"../GrayHoverContainer/GrayHoverContainer\";\r\nimport CloseButton from \"../CloseButton/CloseButton\";\r\nimport TextBox from \"../TextBox/TextBox\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport ChatItem from \"../ChatItem/ChatItem\";\r\nimport InfiniteScroll from '../InfiniteScroll'\r\nimport Picker from 'emoji-picker-react';\r\nimport OutsideAlerter from \"../OursideAlerter/OutsideAlerter\";\r\n\r\nconst ImageIcon = styled(Icon)`\r\n  box-shadow: none !important;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  :hover {\r\n    background-color: #f0f2f5;\r\n  }\r\n  color: ${(props) => props.theme.colors.primaryblue};\r\n`;\r\n\r\nconst FileInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst ChatItemContainer = styled.div``\r\n\r\nconst ChatBoxWapprer = styled.section`\r\n  background-color: white;\r\n  box-shadow: 0 12px 28px 0 rgba(0, 0, 0, 0.2), 0 2px 4px 0 rgba(0, 0, 0, 0.1);\r\n  height: 420px;\r\n  width: 320px;\r\n  border-radius: 7px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\nconst ChatBoxHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding-top: 3px;\r\n  padding-bottom: 3px;\r\n  padding-left: 3px;\r\n  padding-right: 10px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.1) !important;\r\n`;\r\nconst CustomCloseButton = styled(CloseButton)`\r\n  background-color: white !important;\r\n`;\r\nconst ChatBoxFooter = styled.div`\r\n  padding-top: 3px;\r\n  padding-bottom: 3px;\r\n  padding-left: 3px;\r\n  padding-right: 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChatSection = styled.section`\r\n  height: 100%;\r\n  padding-right: 15px;\r\n  padding-left: 10px;\r\n  overflow-x: hidden;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst EmojiPickerContainer = styled.div`\r\n  position:absolute;\r\n  z-index: 100 !important;\r\n  top: 50px;\r\n  left: -10px;\r\n`\r\n\r\nconst CustomEmojiPicker = styled(Picker)`\r\n  height:300px !important;\r\n`\r\n\r\nexport default function ChatBox(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const [emojiPicker, setEmojiPicker] = useState(false)\r\n  const textBoxRef = useRef(null);\r\n  const chatSectionRef = useRef(null);\r\n  const handleOnChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const onEnterPressed = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      e.preventDefault();\r\n      /** Send message */\r\n      if (text.trim() === \"\") return;\r\n      var message = {\r\n        author: props.host._id,\r\n        text: text,\r\n      };\r\n      setText(\"\")\r\n      props.sendMessage({ room: props.room, message });\r\n      // if (chatSectionRef.current) {\r\n      //   console.log(chatSectionRef.current)\r\n      //   chatSectionRef.current.scrollTop = chatSectionRef.current.scrollHeight;\r\n      // }\r\n    }\r\n  };\r\n\r\n  const handleChooseEmoji = (e, emojiObject) => {\r\n    setText(text + emojiObject.emoji)\r\n  }\r\n\r\n  const toggleEmojiPicker = (e) => {\r\n    textBoxRef.current.blur()\r\n    setEmojiPicker(!emojiPicker)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (textBoxRef.current) {\r\n      textBoxRef.current.focus();\r\n    }\r\n    if (chatSectionRef.current) {\r\n      chatSectionRef.current.scrollTop = chatSectionRef.current.scrollHeight;\r\n    }\r\n  }, [onEnterPressed]);\r\n\r\n  return (\r\n    <ChatBoxWapprer>\r\n      \r\n      <ChatBoxHeader>\r\n        <GrayHoverContainer fitted>\r\n          <AvatarContainer\r\n            size=\"mini\"\r\n            name={`${props.guest.firstName} ${props.guest.lastName}`}\r\n            userId={props.guest._id}\r\n            src={props.guest.profileImageURL}\r\n          />\r\n        </GrayHoverContainer>\r\n        <CustomCloseButton\r\n          primary={true}\r\n          basic={true}\r\n          onClick={props.onClose}\r\n        />\r\n      </ChatBoxHeader>\r\n      <ChatSection ref={chatSectionRef}>\r\n        {\r\n          emojiPicker ? \r\n            <OutsideAlerter onOutsideClicked={toggleEmojiPicker}>\r\n              <EmojiPickerContainer>\r\n                <Picker \r\n                  onEmojiClick = {handleChooseEmoji}\r\n                  disableSearchBar={true}\r\n                />\r\n              </EmojiPickerContainer>\r\n            </OutsideAlerter>\r\n            \r\n          :null\r\n        }\r\n        <InfiniteScroll reverse bottomCallback={() => console.log('more chat')}>\r\n          {props.messages.map((message) => {\r\n            var host;\r\n            message.author === props.host._id ? (host = true) : (host = false);\r\n            return (\r\n              <ChatItemContainer key={message._id}>\r\n                <ChatItem  host={host} text={message.text} />\r\n              </ChatItemContainer>\r\n            );\r\n          })}\r\n        </InfiniteScroll>\r\n      </ChatSection>\r\n      <ChatBoxFooter>\r\n        <TextBox\r\n          ref={textBoxRef}\r\n          maxRows={5}\r\n          rows={1}\r\n          backgroundcolor=\"lightgray\"\r\n          placeholder=\"Aa\"\r\n          onKeyDown={onEnterPressed}\r\n          onChange={handleOnChange}\r\n          value={text}\r\n          handleemojibuttonclick={toggleEmojiPicker}\r\n        />\r\n        \r\n        <ImageIcon name=\"images\" size=\"large\" circular />\r\n      </ChatBoxFooter>\r\n    </ChatBoxWapprer>\r\n  );\r\n}\r\n\r\nChatBox.propTypes = {\r\n  /** The host (Current user) information */\r\n  host: PropTypes.object,\r\n\r\n  /** The guest (Receivers) information */\r\n  guest: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.arrayOf(PropTypes.object),\r\n  ]),\r\n  /** Recent messages to show */\r\n  messages: PropTypes.arrayOf(PropTypes.object),\r\n\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nChatBox.defaultProps = {\r\n  host: {\r\n    _id: \"5f659cec480b0435a073729c\",\r\n    lastName: \"Harvey\",\r\n    firstName: \"Nguyen\",\r\n    email: \"nqhuy213@gmail.com\",\r\n  },\r\n  guest: {\r\n    _id: \"5f659cec480b0435a073729c\",\r\n    lastName: \"Harvey\",\r\n    firstName: \"Nguyen\",\r\n    email: \"nqhuy213@gmail.com\",\r\n  },\r\n};\r\n","import React, {useState, Fragment, useEffect} from 'react'\r\nimport LoginForm from './LoginForm/LoginForm'\r\nimport RegisterForm from './RegisterForm/RegisterForm'\r\nimport { Modal } from 'semantic-ui-react'\r\nimport ChatBox from '../../components/ChatBox/ChatBox'\r\nimport { getToken } from '../../utils/token'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default function LoginPage() {\r\n  const [state, setState] = useState(\r\n    {\r\n      registerForm: false\r\n    }\r\n  )\r\n\r\n  const closeRegisterForm = () => {\r\n    setState({...state, registerForm:false})\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='login-form-container'>\r\n        <LoginForm openRegisterForm={() => setState({...state, registerForm: true})}/>\r\n      </div>\r\n      {/* <ChatBox>\r\n        <ChatBox.Header>\r\n          alo\r\n        </ChatBox.Header>\r\n      </ChatBox> */}\r\n      <Modal size='mini' basic dimmer='inverted' open={state.registerForm} onClose={closeRegisterForm }>\r\n          <RegisterForm closeRegisterForm={closeRegisterForm}/>\r\n      </Modal>\r\n    </Fragment>\r\n    \r\n  )\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./TabBar.scss\";\r\nimport { Button, Icon, Divider } from \"semantic-ui-react\";\r\nimport { history } from \"../../../../history\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function TabBar({ activePage, handleChangePage }) {\r\n  const [selectedTab, setSelectedTab] = useState({\r\n    [activePage]: true,\r\n  });\r\n\r\n  useEffect(() => setSelectedTab({[activePage]: true}),[activePage])\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className='link-button'>\r\n        <Button\r\n          icon\r\n          className={\r\n            selectedTab.home\r\n              ? \"navbar-item tab-icon selected\"\r\n              : \"navbar-item tab-icon\"\r\n          }\r\n          name=\"home\"\r\n        >\r\n          <Icon\r\n            name=\"home\"\r\n            size=\"large\"\r\n            className={\r\n              selectedTab.home ? \"tabbar-item selected\" : \"tabbar-item\"\r\n            }\r\n          />\r\n          {selectedTab.home ? <Divider className=\"selected-indicator\" /> : null}\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/watch\" className='link-button'>\r\n        <Button\r\n          icon\r\n          className={\r\n            selectedTab.watch\r\n              ? \"navbar-item tab-icon selected\"\r\n              : \"navbar-item tab-icon\"\r\n          }\r\n          name=\"watch\"\r\n        >\r\n          <Icon\r\n            name=\"youtube play\"\r\n            size=\"large\"\r\n            className={\r\n              selectedTab.watch ? \"tabbar-item selected\" : \"tabbar-item\"\r\n            }\r\n          />\r\n          {selectedTab.watch ? (\r\n            <Divider className=\"selected-indicator\" />\r\n          ) : null}\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/marketplace\" className='link-button'>\r\n        <Button\r\n          icon\r\n          className={\r\n            selectedTab.marketplace\r\n              ? \"navbar-item tab-icon selected\"\r\n              : \"navbar-item tab-icon\"\r\n          }\r\n          name=\"marketplace\"\r\n        >\r\n          <Icon\r\n            name=\"warehouse\"\r\n            size=\"large\"\r\n            className={\r\n              selectedTab.marketplace ? \"tabbar-item selected\" : \"tabbar-item\"\r\n            }\r\n          />\r\n          {selectedTab.marketplace ? (\r\n            <Divider className=\"selected-indicator\" />\r\n          ) : null}\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/group\" className='link-button'>\r\n        <Button\r\n          icon\r\n          className={\r\n            selectedTab.group\r\n              ? \"navbar-item tab-icon selected\"\r\n              : \"navbar-item tab-icon\"\r\n          }\r\n          name=\"group\"\r\n        >\r\n          <Icon\r\n            name=\"group\"\r\n            size=\"large\"\r\n            className={\r\n              selectedTab.group ? \"tabbar-item selected\" : \"tabbar-item\"\r\n            }\r\n          />\r\n          {selectedTab.group ? (\r\n            <Divider className=\"selected-indicator\" />\r\n          ) : null}\r\n        </Button>\r\n      </Link>\r\n\r\n      <Link to=\"/game\" className='link-button'>\r\n        <Button\r\n          icon\r\n          className={\r\n            selectedTab.game\r\n              ? \"navbar-item tab-icon selected\"\r\n              : \"navbar-item tab-icon\"\r\n          }\r\n          name=\"game\"\r\n        >\r\n          <Icon\r\n            name=\"gamepad\"\r\n            size=\"large\"\r\n            className={\r\n              selectedTab.game ? \"tabbar-item selected\" : \"tabbar-item\"\r\n            }\r\n          />\r\n          {selectedTab.game ? <Divider className=\"selected-indicator\" /> : null}\r\n        </Button>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n}\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport './PopupButton.scss';\r\nimport {Button, Popup, Icon} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport OutsideAlerter from '../OursideAlerter/OutsideAlerter';\r\n\r\nexport default function PopupButton(props) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOnClick = (e) => {\r\n    setOpen(!open);\r\n  };\r\n  const triggerButton = (\r\n    <Icon\r\n      name={props.icon}\r\n      className={open ? \"popup-trigger-button selected\" : \"popup-trigger-button\"}\r\n      circular\r\n      onClick={handleOnClick}\r\n      size=\"large\"\r\n    />\r\n  );\r\n\r\n  const handleOnOutsideClicked = (e) => {\r\n    if(e.target.className.includes(props.icon)) return\r\n    setOpen(false)\r\n  }\r\n  return (\r\n    <Popup\r\n      trigger={triggerButton}\r\n      open={open}\r\n      basic\r\n      className=\"popup-panel-container\"\r\n    >\r\n      <OutsideAlerter onOutsideClicked={handleOnOutsideClicked}>\r\n        <div className=\"popup-panel-wrapper\">{props.children}</div>\r\n      </OutsideAlerter>\r\n    </Popup>\r\n  );\r\n}\r\n\r\nPopupButton.propTypes = {\r\n  icon: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport './PopupButtonGroup.scss';\r\nimport PropTypes from 'prop-types';\r\nexport default function PopupButtonGroup(props) {\r\n\r\n  return (\r\n    <div className='popup-button-group'>\r\n      {\r\n        props.children\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nPopupButtonGroup.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element),\r\n};","import React from 'react';\r\nimport './PanelButton.scss';\r\nimport PropTypes from 'prop-types';\r\nimport GrayHoverContainer from '../GrayHoverContainer/GrayHoverContainer';\r\nimport {Icon} from 'semantic-ui-react';\r\n\r\nexport default function PanelButton(props) {\r\n  return (\r\n    <GrayHoverContainer>\r\n      <div className=\"panel-button-container\" onClick={props.onClick}>\r\n        <div className=\"panel-button-icon-container\">\r\n          <Icon\r\n            className=\"panel-button-icon\"\r\n            name={props.icon ? props.icon : 'facebook'}\r\n            circular\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n        <div className=\"panel-button-infomation-container\">\r\n          <span className=\"panel-button-title-label\">\r\n            {props.title || 'title'}\r\n          </span>\r\n          <span className=\"panel-button-meta-label\">{props.meta}</span>\r\n        </div>\r\n      </div>\r\n    </GrayHoverContainer>\r\n  );\r\n}\r\n\r\nPanelButton.propTypes = {\r\n  icon: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  meta: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React, {Fragment, useEffect} from 'react';\r\nimport './AccountPanel.scss';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport {Divider, Segment} from 'semantic-ui-react';\r\nimport AvatarContainer from '../../../../components/AvatarContainer/AvatarContainer';\r\nimport GrayHoverContainer from '../../../../components/GrayHoverContainer/GrayHoverContainer';\r\nimport PanelButton from '../../../../components/PanelButton/PanelButton';\r\nimport {logoutSuccess} from '../../../../redux/actions/auth'\r\nimport {getUserId} from '../../../../utils/user'\r\nimport { closeSocket } from '../../../../redux/actions/socket';\r\n\r\nexport default function AccountPanel(props) {\r\n  const user = useSelector(state => state.Auth.user)\r\n  const socket = useSelector(state => state.Socket.socket)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n\r\n  },[socket])\r\n\r\n  const handleLogOut = () => {\r\n    // socket.emit('user_logout', {userId: getUserId()})\r\n    dispatch(logoutSuccess())\r\n    dispatch(closeSocket(socket))\r\n    localStorage.removeItem('token')\r\n    window.location.reload()\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <GrayHoverContainer>\r\n        <AvatarContainer meta=\"View your profile\" size=\"tiny\" userId={user._id}/>\r\n      </GrayHoverContainer>\r\n      <Divider className=\"custom-divider\" />\r\n      <PanelButton\r\n        icon=\"comment alternate\"\r\n        title=\"Provide feedback\"\r\n        meta=\"Help us improve the new Facebook\"\r\n      />\r\n      <Divider className=\"custom-divider\" />\r\n      <PanelButton icon=\"setting\" title=\"Settings & Privacy\" />\r\n      <PanelButton icon=\"question circle\" title=\"Help & Support\" />\r\n      <PanelButton\r\n        icon=\"arrow alternate circle left\"\r\n        title=\"Switch to Classic Facebook for 48 Hours\"\r\n        meta=\"Starting in September, the classic Facebook will no longer be available\"\r\n      />\r\n      <PanelButton icon=\"log out\" title=\"Log Out\" onClick={handleLogOut}/>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAccountPanel.propTypes = {\r\n};\r\n","import React, { useState } from 'react';\r\nimport './NavigationBar.scss';\r\nimport logo from './logo.png';\r\nimport {Search, Button, Icon, Image} from 'semantic-ui-react';\r\nimport TabBar from './TabBar/TabBar';\r\nimport PopupButton from '../../../components/PopupButton/PopupButton';\r\nimport PopupButtonGroup from '../../../components/PopupButtonGroup/PopupButtonGroup';\r\nimport AccountPanel from '../Panels/AccountPanel/AccountPanel';\r\nimport {useSelector} from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport AvatarContainer from '../../../components/AvatarContainer/AvatarContainer';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AvatarButton = styled.div`\r\n  position: relative !important;\r\n  border-radius: 20px;\r\n  padding-right: 10px;\r\n  padding-left: 4px;\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n  font-weight: 600;\r\n  margin-left: 10px !important;\r\n  margin-right: 10px !important;\r\n  :hover{\r\n    background-color: ${props => props.selected ? props.theme.colors.deEmphasizedBlueHoverButton : props.theme.colors.popupHoverBackground};\r\n    cursor: pointer;\r\n  }\r\n  background-color: ${props => props.selected ? props.theme.colors.deEmphasizedBlueButton : 'transparent'};\r\n  color: ${props => props.selected ? props.theme.colors.primaryblue : 'black'}\r\n`\r\n\r\nexport default function NavigatioBar({activePage}) {\r\n  const user = useSelector((state) => state.Auth.user)\r\n\r\n\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <div className=\"left-flex\">\r\n        <img alt=\"logo-image\" src={logo} className=\"navbar-item logo-img\" />\r\n        <Search className=\"navbar-item search-box\" />\r\n      </div>\r\n      <div className=\"middle-flex tabbar\">\r\n        <TabBar activePage={activePage} />\r\n      </div>\r\n      <div className=\"right-flex\">\r\n        \r\n        {user ? \r\n          <Link to={`/profile/${user._id}`}>\r\n            <AvatarButton \r\n                icon \r\n                labelPosition=\"left\" \r\n                circular \r\n                selected={activePage === 'profile'}>\r\n                <Image src={user.profileImageURL} avatar/>\r\n                {user.firstName} \r\n              </AvatarButton>\r\n          </Link>\r\n          :\r\n          null\r\n        }\r\n        <PopupButtonGroup>\r\n          <PopupButton icon=\"bars\">\r\n            <h1>ALo</h1>\r\n          </PopupButton>\r\n          <PopupButton icon=\"facebook messenger\">\r\n            <h1>ALo</h1>\r\n          </PopupButton>\r\n          <PopupButton icon=\"bell\">\r\n            <h1>ALo</h1>\r\n          </PopupButton>\r\n          <PopupButton icon=\"caret down\">\r\n            <AccountPanel/>\r\n          </PopupButton>\r\n        </PopupButtonGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './AskPostBox.scss'\r\nimport { Segment , Image, Button} from 'semantic-ui-react'\r\n\r\nexport default function AskPostBox({openPostForm}) {\r\n  return (\r\n    <Segment className='ask-post-box-wrapper'>\r\n      <div className='avatar-container'>\r\n        <Image src='https://react.semantic-ui.com/images/wireframe/square-image.png' className='avatar-img' circular />\r\n      </div>\r\n      <div className='ask-button-container'>\r\n        <Button className='ask-button' fluid onClick={openPostForm}>\r\n          <span>What are your thinking?</span>\r\n        </Button>\r\n      </div>\r\n    </Segment>\r\n  )\r\n}\r\n","import React, { useRef } from 'react';\r\nimport {Icon} from 'semantic-ui-react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function AddFileSection(props) {\r\n  const imageInputRef = useRef(null)\r\n\r\n  const handleImageChange = (e) => {\r\n    props.handleImageChosen(e)\r\n  }\r\n\r\n  const clickImageInput = (e) => {\r\n    imageInputRef.current.click()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      \r\n      <Heading>Add to Your Post</Heading>\r\n      <IconWrapper>\r\n        <FileIcon size=\"large\" name=\"video\" color=\"violet\" circular onClick={() => {}}/>\r\n\r\n        <FileIcon size=\"large\" name=\"images\" color=\"green\" circular onClick={clickImageInput}/>\r\n        <FileInput type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" ref={imageInputRef} onChange={handleImageChange}/>\r\n\r\n        <FileIcon size=\"large\" name=\"tags\" color=\"blue\" circular onClick={() => {}}/>\r\n        <FileIcon size=\"large\" name=\"point\" color=\"red\" circular onClick={() => {}}/>\r\n      </IconWrapper>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nAddFileSection.propTypes = {\r\n  postImage: PropTypes.string,\r\n  handleImageChosen: PropTypes.func,\r\n};\r\n\r\nconst Wrapper = styled.section`\r\n  border: 1px solid lightgrey;\r\n  height: 60px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1), 0 1px 1px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Heading = styled.h4`\r\n  margin: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: 50%;\r\n`;\r\n\r\nconst FileIcon = styled(Icon)`\r\n  box-shadow: none !important;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n  :hover{\r\n    background-color: #f0f2f5;\r\n  }\r\n`;\r\n\r\nconst FileInput = styled.input `\r\n  display: none;\r\n`\r\n","import AddFileSection from './AddFileSection'\r\n\r\nexport default AddFileSection;","import { callAPI } from \"./base\"\r\n\r\nexport const uploadImage = (formData) => callAPI('upload', 'POST', formData, {})","import React, {Fragment, useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport './PostForm.scss';\r\nimport {\r\n  Segment,\r\n  Divider,\r\n  Form,\r\n  TextArea,\r\n  Button,\r\n  Image,\r\n  Icon, Header\r\n} from 'semantic-ui-react';\r\nimport AvatarContainer from '../../../components/AvatarContainer/AvatarContainer';\r\nimport {postPost} from '../../../api/post';\r\nimport {addNewPost} from '../../../redux/actions/newsFeed';\r\nimport AddFileSection from './AddFileSection';\r\nimport styled from 'styled-components';\r\nimport CloseButton from '../../../components/CloseButton/CloseButton';\r\nimport UploadImageService, { uploadImage } from '../../../api/upload'\r\nimport axios from 'axios'\r\nimport { callAPI } from '../../../api/base';\r\n\r\nconst PostFormHeaderContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items:center;\r\n`\r\n\r\nconst CloseFormContainer = styled.div `\r\n  margin-left: auto;\r\n`\r\n\r\nconst PostFormHeader = styled.h1`\r\n  position: relative;\r\n`\r\n\r\nconst CloseImageContainer = styled.div `\r\n  position:relative;\r\n  max-height: fit-content;\r\n  max-width: fit-content;\r\n  left: 94%;\r\n  top: 33px;\r\n  z-index: 2;\r\n`\r\n\r\nconst ImagePreview = styled(Image)`\r\n  margin-bottom: 1.5rem;\r\n`;\r\nconst ShrinkTextArea = styled(({hasImage, ...props}) => <TextArea {...props}/>)`\r\n  resize: none !important;\r\n  border: none !important;\r\n  font-size: 25px !important;\r\n  height: ${(props) => (props.hasImage ? 'none' : '200px')};\r\n  padding: 0 !important;\r\n  margin-top: 20px !important;\r\n`;\r\n\r\nexport default function PostForm({closePostForm, user}) {\r\n  const dispatch = useDispatch();\r\n  const [postDescription, setPostDescription] = useState('');\r\n  const [postImageUrl, setPostImageUrl] = useState('');\r\n  const [postImageFile, setPostImageFile] = useState(null);\r\n  \r\n  const handleOnChange = (e) => {\r\n    setPostDescription(e.target.value);\r\n  };\r\n\r\n  const handleOnSubmit = async () => {\r\n    var imageURL\r\n    if(postImageFile){\r\n      var formData = new FormData\r\n      formData.append('image', postImageFile)\r\n      const res = await uploadImage(formData)\r\n      if(res.success){\r\n        imageURL = `${process.env.REACT_APP_API_URL}/${res.data.image.filename}`\r\n      }\r\n    }\r\n    const res = await postPost({description: postDescription, imageURL: imageURL});\r\n    if (res.success) {\r\n      dispatch(addNewPost(res.data.result));\r\n      closePostForm();\r\n    } else {\r\n      // TODO: handle failure\r\n    }\r\n  };\r\n\r\n  const chooseImage = (e) => {\r\n    const reader = new FileReader()\r\n    if(e.target.files[0]){\r\n      setPostImageFile(e.target.files[0])\r\n      reader.readAsDataURL(e.target.files[0])\r\n      reader.onloadend = () => {\r\n          setPostImageUrl(reader.result)\r\n      }\r\n    }\r\n    e.target.value = null\r\n  }\r\n  \r\n  return (\r\n    <Segment className=\"post-form-wrapper\">\r\n      <PostFormHeaderContainer>\r\n        <PostFormHeader className=\"title\">Create Post</PostFormHeader>\r\n        <CloseFormContainer>\r\n          <CloseButton onClick = {closePostForm}/>\r\n        </CloseFormContainer>\r\n      </PostFormHeaderContainer>\r\n      <Divider />\r\n      <AvatarContainer\r\n        src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n        name={`${user.firstName} ${user.lastName}`}\r\n        userId={user._id}\r\n      />\r\n      <Form onSubmit={handleOnSubmit}>\r\n        <ShrinkTextArea\r\n          hasImage={postImageUrl ? true : false}\r\n          placeholder=\"What are your thinking?\"\r\n          onChange={handleOnChange}\r\n          value={postDescription}\r\n        />\r\n        {postImageUrl ? \r\n        <Fragment>\r\n          <CloseImageContainer>\r\n            <CloseButton onClick = {() => setPostImageUrl('')}/>\r\n          </CloseImageContainer>\r\n          <ImagePreview tabIndex={0} src={postImageUrl} fluid /> \r\n        </Fragment>\r\n        : null}\r\n        <AddFileSection\r\n          postImage={postImageUrl}\r\n          handleImageChosen={chooseImage}\r\n        />\r\n        <Button\r\n          className=\"post-button\"\r\n          type=\"submit\"\r\n          fluid\r\n          disabled={\r\n            (postDescription.trim() === '' && postImageUrl.trim() === '') ? true : false\r\n          }\r\n        >\r\n          Post\r\n        </Button>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Icon } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst CustomLikeIcon = styled(Icon)`\r\n  color: ${props => props.theme.colors.primaryblue};\r\n`\r\n\r\nexport default function LikeIcon() {\r\n  return (\r\n    <Icon name=\"like\" size='small' color='red'/>\r\n  )\r\n}\r\n","import LikeIcon from './LikeIcon'\r\n\r\nexport default LikeIcon;","import { getUserId } from \"./user\"\r\n\r\nexport const IsLiked = (post, userId = getUserId()) => {\r\n  let likeList = post.likes.map(l => {\r\n      return l.likedBy.toString()\r\n  })\r\n  return likeList.includes(userId)\r\n  \r\n}","import { Segment } from 'semantic-ui-react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const CommentItemWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 50px auto;\r\n`\r\n\r\nexport const LikeCountWrapper = styled.section`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  background-color: white;\r\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1), 0 1px 1px rgba(0, 0, 0, 0.1);\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-radius: 15px;\r\n  bottom: -8px ;\r\n  right: -8px;\r\n`;\r\n\r\nexport const LikeCountLabel = styled.span`\r\n  font-size: 0.9rem;\r\n`;\r\n\r\nexport const CommentActionItem = styled.div`\r\n  font-size: 0.9rem;\r\n  font-weight: 700;\r\n  margin-right: 4px;\r\n  margin-left: 4px;\r\n  :hover{\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const CommentLikeAction = styled.div`\r\n  color: ${props => props.isLiked ? props.theme.colors.primaryblue : props.theme.colors.darkgray};\r\n  \r\n`;\r\n\r\nexport const CommentReplyAction = styled.div`\r\n  color: ${props => props.theme.colors.darkgray};\r\n`;\r\n\r\nexport const CommentHolder = styled(Segment)`\r\n  margin: 0 !important;\r\n  padding-top: 5px !important;\r\n  padding-bottom: 5px !important;\r\n  background-color: ${props => props.theme.colors.lightgray} !important;\r\n  border: none !important;\r\n  border-radius: 17px !important;\r\n  box-shadow: none !important;\r\n  display: flex !important;\r\n  flex-direction: column !important;\r\n  justify-content: center;\r\n  width: fit-content;\r\n  resize: both;\r\n  max-width: 70%;\r\n`\r\n\r\nexport const CommenterNameLabel = styled.span`\r\n  font-weight: 600;\r\n\r\n`\r\n\r\nexport const CommentDescriptionLabel = styled.span`\r\n  font-size: 15px;\r\n  line-height: 20px;\r\n  word-spacing: 1px;\r\n  word-break: break-word;\r\n`\r\nexport const CommentActionContainer = styled.div`\r\n  display: flex;\r\n  padding-left: 10px;\r\n  padding-top: 5px;\r\n  align-items: flex-end;\r\n`\r\nexport const DateTimeLabel = styled.span`\r\n  font-size: 0.9rem;\r\n  color: rgb(82, 81, 81);\r\n`","import React, {useEffect} from 'react';\r\nimport AvatarContainer from '../AvatarContainer/AvatarContainer';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport {getUserId} from '../../utils/user';\r\nimport LikeIcon from '../LikeIcon';\r\nimport {IsLiked} from '../../utils/attachIsLiked';\r\nimport '../../styles/shared.scss';\r\n\r\nimport {\r\n  CommentItemWrapper,\r\n  LikeCountLabel,\r\n  LikeCountWrapper,\r\n  CommentActionItem,\r\n  CommentLikeAction,\r\n  CommentReplyAction,\r\n  CommentHolder,\r\n  CommenterNameLabel,\r\n  CommentDescriptionLabel,\r\n  CommentActionContainer,\r\n  DateTimeLabel\r\n} from './style';\r\n\r\nexport default function CommentItem(props) {\r\n  const {comment} = props;\r\n\r\n  const handleLikeComment = () => {\r\n    props.likeComment({\r\n      userId: getUserId(),\r\n      postId: comment.postId,\r\n      commentId: comment._id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n  }, [props.isLiked]);\r\n  return (\r\n    <CommentItemWrapper>\r\n      <AvatarContainer src=\"\" userId={comment.postedBy._id}/>\r\n      <div>\r\n        <CommentHolder>\r\n          <CommenterNameLabel>\r\n            {comment.postedBy.firstName + ' ' + comment.postedBy.lastName}\r\n          </CommenterNameLabel>\r\n          <CommentDescriptionLabel>{comment.text}</CommentDescriptionLabel>\r\n          {comment.likes.length > 0 ? (\r\n            <LikeCountWrapper>\r\n              <LikeIcon />\r\n              <LikeCountLabel>{comment.likes.length}</LikeCountLabel>\r\n            </LikeCountWrapper>\r\n          ) : null}\r\n        </CommentHolder>\r\n        <CommentActionContainer>\r\n          <CommentActionItem onClick={handleLikeComment}>\r\n            <CommentLikeAction isLiked={IsLiked(comment)}>\r\n              Like\r\n            </CommentLikeAction>\r\n          </CommentActionItem>\r\n          <CommentActionItem>\r\n            <CommentReplyAction>Reply</CommentReplyAction>\r\n          </CommentActionItem>\r\n          <DateTimeLabel>\r\n            {moment(comment.createdAt).fromNow()}\r\n          </DateTimeLabel>\r\n        </CommentActionContainer>\r\n      </div>\r\n    </CommentItemWrapper>\r\n  );\r\n}\r\n\r\nCommentItem.propTypes = {\r\n  comment: PropTypes.object.isRequired,\r\n  likeComment: PropTypes.func,\r\n};\r\n","import React, {useState} from 'react';\r\nimport './PostItem.scss';\r\nimport {Segment, Image, Icon, Button} from 'semantic-ui-react';\r\nimport AvatarContainer from '../AvatarContainer/AvatarContainer';\r\nimport CommentItem from '../CommentItem/CommentItem';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport PropTypes from 'prop-types';\r\nimport {getUserId} from '../../utils/user';\r\nimport {IsLiked} from '../../utils/attachIsLiked';\r\nimport moment from 'moment'\r\nimport LikeIcon from '../LikeIcon';\r\n\r\n\r\nexport default function PostItem(props) {\r\n  const {post, likePost, commentPost, likeComment} = props;\r\n  /**States Section */\r\n  const [commentText, setCommentText] = useState('');\r\n  const [showComment, setShowComment] = useState(\r\n    post.comments.length === 0 ? true : false\r\n  );\r\n\r\n  const onEnterPressed = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      e.preventDefault();\r\n      /**Submit the comment */\r\n      if(commentText.trim() === '') return\r\n      handleComment();\r\n    }\r\n  };\r\n\r\n  const handleLike = async (e) => {\r\n    likePost({userId: getUserId(), postId: post._id});\r\n  };\r\n\r\n  const handleComment = (e) => {\r\n    commentPost({\r\n      userId: getUserId(),\r\n      postId: post._id,\r\n      commentData: {\r\n        text: commentText,\r\n      },\r\n    });\r\n    setCommentText('')\r\n  };\r\n\r\n  const handleShowComment = (e) => {\r\n    setShowComment(!showComment);\r\n  };\r\n\r\n  const commentList = post.comments.map((cmt) => {\r\n    return (\r\n      <div key={cmt._id} className=\"comment-item-container\">\r\n        <CommentItem comment={cmt} likeComment={likeComment}/>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Segment className=\"post-item-wrapper\">\r\n      <AvatarContainer\r\n        src=\"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n        name={post.postedBy.firstName + \" \" + post.postedBy.lastName}\r\n        meta={moment(post.createdAt).fromNow()}\r\n        userId={post.postedBy._id}\r\n      />\r\n      <div className=\"post-description-container\">{post.description}</div>\r\n      {post.imageURL ? (\r\n        <Image className=\"post-image-wrapper\" src={post.imageURL} />\r\n      ) : null}\r\n      <div className=\"post-like-number\">\r\n        <div id=\"post-like-label\">\r\n          <LikeIcon/>\r\n          <span>{post.likes.length}</span>\r\n        </div>\r\n        <span className=\"post-comment-number\" onClick={handleShowComment}>\r\n          {post.comments.length} comments\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"post-action-container\">\r\n        <div className=\"post-action-wrapper\">\r\n          <Button\r\n            className={\r\n              IsLiked(post) ? 'post-action-button liked' : 'post-action-button'\r\n            }\r\n            fluid\r\n            onClick={handleLike}\r\n          >\r\n            Like\r\n          </Button>\r\n          <Button\r\n            className=\"post-action-button\"\r\n            fluid\r\n            onClick={handleShowComment}\r\n          >\r\n            Comment\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {showComment ? (\r\n        <div className=\"comment-section-container\">\r\n          {commentList}\r\n          <div className=\"comment-form-container\">\r\n            <TextareaAutosize\r\n              className=\"comment-input\"\r\n              value={commentText}\r\n              onChange={(e) => {\r\n                setCommentText(e.target.value);\r\n              }}\r\n              placeholder=\"Write your comment\"\r\n              onKeyDown={onEnterPressed}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </Segment>\r\n  );\r\n}\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  likePost: PropTypes.func,\r\n  commentPost: PropTypes.func,\r\n  likeComment: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport './PostItemList.scss';\r\nimport PostItem from '../PostItem/PostItem';\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from '../InfiniteScroll/InfiniteScroll';\r\n\r\nfunction PostItemList(props) {\r\n  const {items, likePost, commentPost, likeComment, getMorePost} = props\r\n\r\n  const itemsList = items.map((post) =>\r\n    <div key={post._id} className='post-item-container'>\r\n      <PostItem post={post} likePost={likePost} commentPost={commentPost} likeComment={likeComment}/>\r\n    </div>\r\n    \r\n  );\r\n  return (\r\n    <div className='post-list-wrapper'>\r\n      <InfiniteScroll bottomCallback={getMorePost}>\r\n       {itemsList}\r\n      </InfiniteScroll>\r\n    </div>\r\n )\r\n}\r\n\r\nPostItemList.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  likePost: PropTypes.func,\r\n  commentPost: PropTypes.func,\r\n  likeComment: PropTypes.func,\r\n};\r\n\r\nexport default PostItemList","import { useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { fetchNewsFeed, fetchNewsFeedMore, updateNewsFeedPost } from '../../redux/actions/newsFeed'\r\n\r\nexport default function usePosts() {\r\n  const posts = useSelector(state => state.NewsFeed.data.posts.items)\r\n  const socket = useSelector(state => state.Socket.socket)\r\n  const nextCount = useSelector(state => state.NewsFeed.data.posts.nextCount)\r\n  const dispatch = useDispatch()\r\n\r\n  const likePost = ({userId, postId}) => {\r\n    socket.emit('like_post', {userId, postId})\r\n  }\r\n\r\n  const commentPost = ({userId, postId, commentData}) => {\r\n    socket.emit('comment_post', {userId, postId, commentData})\r\n  }\r\n\r\n  const likeComment = ({userId, postId, commentId}) => {\r\n    socket.emit('like_comment', {userId, postId, commentId})\r\n  }\r\n\r\n  const getMorePost = () => {\r\n    // dispatch(fetchNewsFeedMore({nextCount}))\r\n    console.log('Get more post');\r\n  }\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchNewsFeed())\r\n    if(socket){\r\n      socket.on('update_post', (post) => {\r\n        dispatch(updateNewsFeedPost(post))\r\n      })\r\n    }\r\n  },[socket, dispatch])\r\n\r\n  return {posts, likePost, commentPost, likeComment, getMorePost}\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport './ActiveUserItem.scss';\r\nimport PropTypes from 'prop-types';\r\nimport AvatarContainer from '../../../../components/AvatarContainer/AvatarContainer'\r\nimport GrayHoverContainer from '../../../../components/GrayHoverContainer/GrayHoverContainer';\r\n\r\nexport default function ActiveUserItem({user, onClick}) {\r\n\r\n  \r\n  return (\r\n    <GrayHoverContainer onClick={() => {onClick(user)}}>\r\n      <AvatarContainer disable online\r\n        name={`${user.firstName} ${user.lastName}`} \r\n        src={user.profileImageURL}/>\r\n    </GrayHoverContainer>\r\n  )\r\n}\r\n\r\nActiveUserItem.propTypes = {\r\n  user: PropTypes.object,\r\n  onClick: PropTypes.func,\r\n};","import React, { useEffect } from 'react';\r\nimport './ActiveUserBar.scss';\r\nimport PropTypes from 'prop-types';\r\nimport ActiveUserItem from './ActiveUserItem/ActiveUserItem';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { openChat } from '../../../redux/actions/chat';\r\n\r\nexport default function ActiveUserBar({activeUsers}) {\r\n  const dispatch = useDispatch()\r\n  const host = useSelector(state => state.Auth.user)\r\n  const socket = useSelector(state => state.Socket.socket)\r\n\r\n  const openChatWith = (guest) => {\r\n    const participants = [host._id, guest._id]\r\n    socket.emit('join_chat', (participants))\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if(socket && host){\r\n      socket.on('join_chat', ({chat}) => {\r\n        var guest\r\n        var participants = chat.participants\r\n        for (let i = 0; i < participants.length; i++) {\r\n          const user = participants[i];\r\n          if(user._id === host._id){\r\n            participants.splice(i,1)\r\n            break\r\n          }\r\n        }\r\n        if(participants.length === 1){\r\n          guest = participants[0]\r\n        }else{\r\n          /** Handle group chat */ \r\n        }\r\n        if(guest === undefined) guest = host\r\n        chat.host = host\r\n        chat.guest = guest\r\n        dispatch(openChat(chat))\r\n      })\r\n    }\r\n  },[socket,host])\r\n\r\n\r\n\r\n  return (\r\n    <div className='active-user-bar-container'>\r\n      <h1>Active users</h1>\r\n      {\r\n        activeUsers.map(user => \r\n          <ActiveUserItem key={user._id} user={user} onClick={openChatWith}/>   \r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nActiveUserBar.propTypes = {\r\n  activeUsers: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};","import * as types from '../types'\r\n\r\nexport const openChat = (chat) => {\r\n  return dispatch => {\r\n    /** Fetch API to get the chat data of the host and the guest */\r\n\r\n    dispatch({\r\n      type: types.OPEN_CHAT,\r\n      payload: chat\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateChat = (chat) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: types.UPDATE_CHAT,\r\n      payload: chat\r\n    })\r\n  }\r\n}\r\n\r\nexport const closeChat = (guest) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: types.CLOSE_CHAT,\r\n      payload: {guest}\r\n    })\r\n  }\r\n}","import React, { useState, Fragment } from \"react\";\r\nimport \"./NewsFeedPage.scss\";\r\nimport AskPostBox from \"../../components/AskPostBox/AskPostBox\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport PostForm from \"./PostForm/PostForm\";\r\nimport PostItemList from \"../../components/PostItemList/PostItemList\";\r\nimport usePosts from \"./_usePosts\";\r\nimport useActiveFriends from \"./_useActiveFriends\";\r\nimport ActiveUserBar from \"./ActiveUserBar/ActiveUserBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport NavigationBar from \"../NavigationPage/NavigationBar/NavigationBar\";\r\n\r\nexport default function NewsFeedPage() {\r\n  const { activeFriends } = useActiveFriends();\r\n  const { posts, likePost, commentPost, likeComment, getMorePost } = usePosts();\r\n  const [openPostForm, setOpenPostForm] = useState(false);\r\n  const user = useSelector((state) => state.Auth.user);\r\n  return (\r\n    <Fragment>\r\n      <div className=\"page-container news-feed-page\">\r\n        <div className=\"left-flex-container\"></div>\r\n        <div className=\"middle-flex-container\">\r\n          <div className=\"ask-post-box-container\">\r\n            <AskPostBox openPostForm={() => setOpenPostForm(true)} />\r\n          </div>\r\n          <div className=\"post-list-container\">\r\n            <PostItemList\r\n              items={posts}\r\n              likePost={likePost}\r\n              commentPost={commentPost}\r\n              likeComment={likeComment}\r\n              getMorePost={getMorePost}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"right-flex-container\">\r\n          <ActiveUserBar activeUsers={activeFriends} />\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        basic\r\n        size=\"tiny\"\r\n        dimmer=\"inverted\"\r\n        open={openPostForm}\r\n        onClose={() => setOpenPostForm(false)}\r\n      >\r\n        <PostForm\r\n          user={user}\r\n          closePostForm={() => {\r\n            setOpenPostForm(false);\r\n          }}\r\n        />\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserId } from '../../utils/user'\r\nimport { fetchActiveFriends, updateActiveFriend, deleteActiveFriend } from '../../redux/actions/newsFeed'\r\n\r\nexport default function useActiveFriends() {\r\n  const activeFriends = useSelector(state => state.NewsFeed.data.activeFriends)\r\n  return {activeFriends}\r\n}\r\n","import React from 'react'\r\n\r\nexport default function WatchPage() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatBox from \"../ChatBox/ChatBox\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ChatSectionWrapper = styled.section`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst ChatBoxContainer = styled.div`\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nexport default function ChatSection(props) {\r\n  return (\r\n    <ChatSectionWrapper>\r\n      {props.chats.map((inbox, i) => (\r\n        <ChatBoxContainer key={i}>\r\n          <ChatBox\r\n            room={inbox._id}\r\n            host={inbox.host}\r\n            guest={inbox.guest}\r\n            messages={inbox.messages}\r\n            onClose={() => {\r\n              props.closeChatBox(inbox.guest);\r\n            }}\r\n            sendMessage={props.sendMessage}\r\n          />\r\n        </ChatBoxContainer>\r\n      ))}\r\n    </ChatSectionWrapper>\r\n  );\r\n}\r\n\r\nChatSection.propsTypes = {\r\n  /** All inboxes details */\r\n  chats: PropTypes.array,\r\n  closeChatBox: PropTypes.func,\r\n};\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport NavigationBar from \"./NavigationBar/NavigationBar\";\r\nimport NewsFeedPage from \"../NewsFeedPage/NewsFeedPage\";\r\nimport \"./NavigationPage.scss\";\r\nimport WatchPage from \"../WatchPage/WatchPage\";\r\nimport { getUserId } from \"../../utils/user\";\r\nimport { fetchUser } from \"../../redux/actions/auth\";\r\nimport {\r\n  deleteActiveFriend,\r\n  fetchActiveFriends,\r\n  updateActiveFriend,\r\n} from \"../../redux/actions/newsFeed\";\r\nimport ChatSection from \"../../components/ChatSection/ChatSection\";\r\nimport styled from \"styled-components\";\r\nimport { closeChat, updateChat } from \"../../redux/actions/chat\";\r\nimport { history } from \"../../history\";\r\n\r\nconst ChatSectionContainer = styled.div`\r\n  position: fixed;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  z-index: 10;\r\n`;\r\n\r\nexport default function NavigationPage({ page: Page, activePage }) {\r\n  const socket = useSelector((state) => state.Socket.socket);\r\n  const dispatch = useDispatch();\r\n  const inboxes = useSelector((state) => state.Chat.inbox);\r\n  const user = useSelector((state) => state.Auth.user)\r\n\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.emit(\"user_login\", { userId: getUserId() });\r\n      socket.on(\"user_info\", (user) => {\r\n        dispatch(fetchUser(user));\r\n      });\r\n      socket.on(\"active_friends\", (data) => {\r\n        dispatch(fetchActiveFriends(data));\r\n      });\r\n      socket.on(\"friend_online\", (data) => {\r\n        dispatch(updateActiveFriend(data));\r\n      });\r\n      socket.on(\"friend_offline\", ({ userId }) => {\r\n        dispatch(deleteActiveFriend(userId));\r\n      });\r\n\r\n      socket.on(\"update_inbox\", ({ inbox }) => {\r\n        dispatch(updateChat(inbox));\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n  const closeChatBox = (guest) => {\r\n    dispatch(closeChat(guest));\r\n  };\r\n\r\n  const sendMessage = ({ room, message }) => {\r\n    socket.emit(\"send_chat\", { room, message });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavigationBar activePage={activePage} />\r\n      <div className=\"page-container\">\r\n        <Page />\r\n      </div>\r\n      {inboxes.length > 0 && (\r\n        <ChatSectionContainer>\r\n          <ChatSection\r\n            chats={inboxes}\r\n            closeChatBox={closeChatBox}\r\n            sendMessage={sendMessage}\r\n          />\r\n        </ChatSectionContainer>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","export default {\r\n  colors: {\r\n    primaryblue: \"#1877f2\",\r\n    primaryblueHover: \"#2271da\",\r\n    darkgray: \"#606770\",\r\n    lightgray: \"#edeff0\",\r\n    popupButtonBackground: \"#e8eaeb\",\r\n    popupHoverBackground: \"#e0e0e2\",\r\n    pageBackground: \"#F2F3F5\",\r\n    grayIcon: \"#5e5e5e\",\r\n    deEmphasizedBlueButton: \"#e7f3ff\",\r\n    deEmphasizedBlueHoverButton: \"#dae7f5\",\r\n  },\r\n  typography: {\r\n    fontFamily:\r\n      'Segoe UI Historic, Segoe UI, Helvetica, Arial, sans-serif',\r\n    pxToRem: (px) => {\r\n      return `${px / 16}rem`\r\n    }\r\n  }\r\n}\r\n","import React, { Fragment, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Icon, Image } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport AvatarContainer from \"../../../../components/AvatarContainer/AvatarContainer\";\r\n\r\nconst ProfileImageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\nconst EditProfileImageButton = styled(Button)`\r\n  position: relative;\r\n  background-color: ${(props) => `${props.theme.colors.lightgray} !important`};\r\n  bottom: 50px;\r\n  right: -50px;\r\n  :hover {\r\n    background-color: ${(props) =>\r\n      `${props.theme.colors.popupHoverBackground} !important`};\r\n  }\r\n`;\r\nconst ProfileImage = styled(Image)`\r\n  border: 5px white solid;\r\n  margin: 0 !important;\r\n  width: 150px !important;\r\n  height: 150px !important;\r\n`;\r\n\r\nconst ProfileImageInput = styled.input `\r\n  display: none\r\n`\r\n\r\nexport default function ProfilePicture(props) {\r\n\r\n  const imageInputRef = useRef(null)\r\n\r\n  const handleImageChange = (e) => {\r\n    props.handleImageChosen()\r\n  }\r\n\r\n  const clickImageInput = (e) => {\r\n    imageInputRef.current.click()\r\n  }\r\n  return (\r\n    <ProfileImageWrapper>\r\n      <ProfileImage\r\n        src={\r\n          props.src ||\r\n          \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n        }\r\n        size=\"small\"\r\n        circular\r\n      />\r\n      {props.auth == 'w' ? \r\n        <>\r\n          <EditProfileImageButton circular icon onClick={props.openProfileImageForm}>\r\n            <Icon name=\"camera\" />\r\n          </EditProfileImageButton> \r\n        </> \r\n          : null\r\n\r\n      }\r\n      \r\n      \r\n    </ProfileImageWrapper>\r\n  );\r\n}\r\n\r\nProfilePicture.propTypes = {\r\n  /** Image URL */\r\n  src: PropTypes.string,\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport {Button, Icon, Image} from 'semantic-ui-react'\r\n\r\nconst CoverImageWrapper = styled.div`\r\n  width: 900px;\r\n  height: 470px;\r\n`\r\nconst CoverImage = styled(Image)`\r\n  width: inherit;\r\n  height: inherit;\r\n`\r\nconst EditCoverButton = styled(Button)`\r\n  position: relative;\r\n  float: right;\r\n  margin-right: 15px !important;\r\n  bottom: 50px;\r\n  background-color: ${props => `${props.theme.colors.lightgray} !important`};\r\n  :hover{\r\n    background-color: ${props => `${props.theme.colors.popupHoverBackground} !important`};\r\n  }\r\n`\r\n\r\nexport default function CoverPhoto(props) {\r\n  return (\r\n    <CoverImageWrapper>\r\n      <CoverImage rounded src={props.src || \"https://react.semantic-ui.com/images/wireframe/square-image.png\"}/>\r\n\r\n      {\r\n        props.auth == \"w\" ?\r\n          <EditCoverButton >\r\n            <Icon name='camera'/>\r\n              Edit Cover Photo\r\n          </EditCoverButton>\r\n        : null\r\n      }\r\n      \r\n    </CoverImageWrapper>\r\n  )\r\n}\r\n\r\nCoverPhoto.propTypes = {\r\n  src: PropTypes.string,\r\n}","import {callAPI} from './base'\r\n\r\nexport const getProfile = async (userId) => callAPI(`profile/${userId}`)\r\n\r\nexport const editProfileImage = async (userId, body) => callAPI(`profile/${userId}/edit-profile-image`, 'POST', body)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst BrowseButt = styled(Button) `\r\n  background-color: ${props => props.theme.colors.lightgray} !important;\r\n  color: darkgray !important;\r\n  :hover{\r\n    background-color: ${props => props.theme.colors.primaryblueHover} !important;\r\n  }\r\n`\r\nexport default function BrowseButton({onClick}) {\r\n  return (\r\n    <BrowseButt onClick={onClick}>\r\n      Browse\r\n    </BrowseButt>\r\n  )\r\n}\r\n\r\nBrowseButton.propTypes = {\r\n  onClick: PropTypes.bool,\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\n\r\nconst SaveButt = styled(Button) `\r\n  background-color: ${props => props.theme.colors.primaryblue} !important;\r\n  color: white !important;\r\n  :hover{\r\n    background-color: ${props => props.theme.colors.primaryblueHover} !important;\r\n  }\r\n`\r\nexport default function SaveButton({onClick}) {\r\n  return (\r\n    <SaveButt onClick={onClick}>\r\n      Save\r\n    </SaveButt>\r\n  )\r\n}\r\n\r\nSaveButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n}","import { checkPropTypes } from 'prop-types'\r\nimport React from 'react'\r\nimport { useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport { Button, Divider, Segment } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport AvatarContainer from '../../../../components/AvatarContainer/AvatarContainer'\r\nimport BrowseButton from '../../../../components/BrowseButton'\r\nimport CloseButton from '../../../../components/CloseButton/CloseButton'\r\nimport SaveButton from '../../../../components/SaveButton'\r\nimport ProfilePicture from '../ProfilePicture'\r\n\r\nconst ProfileImageFormHeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\nconst ClosePIFContainer = styled.div`\r\n  margin-left:auto\r\n`\r\nconst PIFormHeader = styled.h1`\r\n  margin: 0px;\r\n`\r\nconst PIFormFooter = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\nconst SaveButtonWrapper = styled.div`\r\n  margin-left:auto;\r\n`\r\nconst ProfileImgBrowseButton = styled(Button)`\r\n  background-color: ${(props) => props.theme.colors.lightgray} !important;\r\n  :hover {\r\n    background-color: ${(props) =>\r\n      `${props.theme.colors.popupHoverBackground} !important`};\r\n  }\r\n`\r\n\r\nconst ProfileImageFileInput = styled.input`\r\n  display: none;\r\n`\r\n\r\nexport default function ProfileImageForm(props) {\r\n\r\n  const [profileImagePreview, setProfileImagePreview] = useState(props.src)\r\n  const profileImageInputRef = useRef(null)\r\n\r\n  const handleImageChange = (e) => {\r\n    const reader = new FileReader()\r\n    if(e.target.files[0]){\r\n      props.handleImageChosen(e.target.files[0])\r\n      reader.readAsDataURL(e.target.files[0])\r\n      reader.onloadend = () => {\r\n        setProfileImagePreview(reader.result)\r\n      }\r\n    }\r\n    e.target.value = null\r\n  }\r\n\r\n  return ( \r\n    <Segment>\r\n      <ProfileImageFormHeaderWrapper>\r\n        <PIFormHeader>Update Profile Image</PIFormHeader>\r\n        <ClosePIFContainer>\r\n          <CloseButton onClick={props.closeProfileImageForm}/>\r\n        </ClosePIFContainer>\r\n        \r\n      </ProfileImageFormHeaderWrapper>\r\n      <Divider/>\r\n        <ProfilePicture src={profileImagePreview}/>\r\n      <Divider/>\r\n      <PIFormFooter>\r\n        \r\n        <SaveButtonWrapper>\r\n          <ProfileImageFileInput \r\n            ref={profileImageInputRef}\r\n            type='file' name='img' id='img' accept='image/*' \r\n            onChange={handleImageChange}\r\n            />\r\n          <ProfileImgBrowseButton onClick = {() => profileImageInputRef.current.click()}>\r\n            Browse\r\n          </ProfileImgBrowseButton>\r\n          <SaveButton onClick={props.handleSubmitImage}/>\r\n        </SaveButtonWrapper>\r\n      </PIFormFooter>\r\n    </Segment>\r\n    \r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport ProfilePicture from './components/ProfilePicture';\r\nimport styled from 'styled-components'\r\nimport CoverPhoto from './components/CoverPhoto';\r\nimport { editProfileImage, getProfile } from '../../api/profile';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport ProfileImageForm from './components/ProfileImageForm';\r\nimport { uploadImage } from '../../api/upload';\r\n\r\n\r\n\r\nconst ProfilePageHeader = styled.div`\r\n  background-color: white;\r\n  display: block;\r\n  text-align: center;\r\n  width:100%;\r\n`\r\n\r\nconst HeaderImagesContainer = styled.div`\r\n  display: block;\r\n  height: 510px;\r\n`\r\nconst CoverPhotoContainer = styled.div`\r\n  width: fit-content;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\nconst ProfilePictureContainer = styled.div`\r\n  width: fit-content;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  position: relative; \r\n  bottom: 130px;\r\n`\r\n\r\n\r\nconst UserNameLabel = styled.span`\r\n  font-size: 1.8rem;\r\n  font-weight: 700;\r\n  font-family: ${(props) => props.theme.typography.fontFamily};\r\n`;\r\n\r\nconst ProfileNavBar = styled.section`\r\n  margin-top: 10px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  height: 40px;\r\n  width: 880px;\r\n  border-top:${props => `2px solid ${props.theme.colors.lightgray}` } ;\r\n`\r\n\r\nexport default function ProfilePage() {\r\n  let {userId} = useParams()\r\n  const [currentUser, setCurrentUser] = useState(null)\r\n  const [auth, setAuth] = useState(['read'])\r\n\r\n  const [profileImageForm, setProfileImageForm] = useState(false)\r\n  const [profileImageFile, setProfileImageFile] = useState(null)\r\n  const [profileImageURL, setProfileImageURL] = useState(null)\r\n\r\n  const [coverImageFile, setCoverImageFile] = useState(null)\r\n  const [coverImageURL, setCoverImageURL] = useState(null)\r\n\r\n  const fetchProfile = async (userId) => {\r\n    const res = await getProfile(userId)\r\n    setCurrentUser(res.data.user)\r\n    setAuth(res.data.auth)\r\n  } \r\n\r\n  useEffect(() => {\r\n    fetchProfile(userId)\r\n\r\n  },[setAuth, setCurrentUser])\r\n\r\n  const handleProfileImageChosen = (file) => {\r\n    setProfileImageFile(file)\r\n  }\r\n\r\n  const handleSubmitProfileImage = async (e) => {\r\n    /**Upload image first */\r\n    var imageURL\r\n    if(profileImageFile){\r\n      var formData = new FormData\r\n      formData.append('image', profileImageFile)\r\n      const res = await uploadImage(formData)\r\n      if(res.success){\r\n        imageURL = `${process.env.REACT_APP_API_URL}/${res.data.image.filename}`\r\n      }\r\n    }\r\n    const res = await editProfileImage(currentUser._id, {imageURL})\r\n    window.location.reload(0)\r\n  }\r\n\r\n  const handleCoverImageChosen = (e) => {\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='page-container profile-page'>\r\n      <ProfilePageHeader>\r\n        <HeaderImagesContainer>\r\n          <CoverPhotoContainer>\r\n            <CoverPhoto auth={auth} src={currentUser ? currentUser.coverImageURL : ''}/>\r\n          </CoverPhotoContainer>\r\n          <ProfilePictureContainer>\r\n            <ProfilePicture auth={auth} \r\n                            src={currentUser ? currentUser.profileImageURL : ''}\r\n                            handleProfileImageChosen={handleProfileImageChosen}\r\n                            openProfileImageForm = {() => setProfileImageForm(true)}\r\n                            \r\n                            />\r\n          </ProfilePictureContainer>\r\n        </HeaderImagesContainer>\r\n        <UserNameLabel>\r\n          {currentUser ? currentUser.firstName + \" \" + currentUser.lastName : null }          \r\n        </UserNameLabel>\r\n        <ProfileNavBar>\r\n\r\n        </ProfileNavBar>\r\n      </ProfilePageHeader>\r\n      <Modal\r\n        basic\r\n        size=\"tiny\"\r\n        dimmer=\"inverted\"\r\n        open={profileImageForm}\r\n        onClose={() => setProfileImageForm(false)}\r\n      >\r\n        <ProfileImageForm \r\n          closeProfileImageForm = {() => setProfileImageForm(false)}\r\n          handleImageChosen = {handleProfileImageChosen}\r\n          src={currentUser ? currentUser.profileImageURL : ''}     \r\n          handleSubmitImage={handleSubmitProfileImage}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport PublicRoute from './routes/PublicRoute';\r\nimport ProtectedRoute from './routes/ProtectedRoute'\r\nimport LoginPage from './pages/LoginPage/LoginPage';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport NavigationPage from './pages/NavigationPage/NavigationPage';\r\nimport {getToken} from './utils/token'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginSuccess } from './redux/actions/auth';\r\nimport { openNewSocket } from './redux/actions/socket';\r\nimport { ThemeProvider, withTheme } from 'styled-components';\r\nimport theme from './styles/theme';\r\nimport { history } from './history';\r\nimport NewsFeedPage from './pages/NewsFeedPage/NewsFeedPage';\r\nimport WatchPage from './pages/WatchPage/WatchPage';\r\nimport ProfilePage from './pages/ProfilePage/ProfilePage';\r\n \r\n\r\nconst token = getToken('token')\r\n\r\nconst localAuth = token ? true : false\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch()\r\n  const userLoggedIn = useSelector(state => state.Auth.userLoggedIn)\r\n  const socket = useSelector(state => state.Socket.socket)\r\n\r\n  useEffect(() => {\r\n    if (localAuth && !userLoggedIn) {\r\n      dispatch(loginSuccess(token))\r\n      dispatch(openNewSocket())\r\n    }\r\n    \r\n  },[userLoggedIn, socket])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      \r\n      <Switch>\r\n        <Route exact path='/'>\r\n          {!(userLoggedIn||localAuth) ? <LoginPage/> : <NavigationPage activePage='home' page={NewsFeedPage}/>}\r\n        </Route>\r\n        <Route path='/watch'>\r\n          {localAuth ? <NavigationPage activePage='watch' page={WatchPage}/> : <Redirect to='/'/>}\r\n        </Route>\r\n        <Route path='/marketplace'>\r\n          {localAuth ? <NavigationPage activePage='marketplace' page={NewsFeedPage}/> : <Redirect to='/'/>}\r\n        </Route>\r\n        <Route path='/group'>\r\n          {localAuth ? <NavigationPage activePage='group' page={NewsFeedPage}/> : <Redirect to='/'/>}\r\n        </Route>\r\n        <Route path='/game'>\r\n          {localAuth ? <NavigationPage activePage='game' page={NewsFeedPage}/> : <Redirect to='/'/>}\r\n        </Route>\r\n        <Route path='/profile/:userId'>\r\n          {localAuth ? <NavigationPage activePage='profile' page={ProfilePage}/> : <Redirect to='/'/>}\r\n        </Route>\r\n      </Switch>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nexport default withTheme(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as types from '../types'\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: {\r\n    posts:{\r\n      items:[],\r\n      nextCount:0,\r\n      hasMore: true\r\n    },\r\n    activeFriends: []\r\n  },\r\n  error: null\r\n}\r\n\r\nexport default function NewsFeed(state = initialState, action = {}){\r\n  switch (action.type){\r\n    case types.FETCH_NEWSFEED_BEGIN:\r\n       return {\r\n         ...state,\r\n         loading: true\r\n       }\r\n\r\n    case types.FETCH_NEWSFEED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data:{\r\n          ...state.data,\r\n          posts:{\r\n            items: action.payload.result,\r\n            nextCount: 1,\r\n            hasMore: action.payload.hasMore\r\n          }\r\n        }\r\n      }\r\n    case types.FETCH_NEWSFEED_MORE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data:{\r\n          ...state.data,\r\n          posts:{\r\n            items: [...state.data.posts.items, ...action.payload.result],\r\n            nextCount: state.data.state.nextCount++,\r\n            hasMore: action.payload.hasMore\r\n          }\r\n        }\r\n      }\r\n    case types.FETCH_NEWSFEED_FAILURE:\r\n      return{\r\n        ...initialState,\r\n        loading: false,\r\n        error: action.payload.error\r\n      }\r\n    \r\n    case types.ADD_NEW_POST: \r\n      return{\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          posts: {\r\n            ...state.data.posts,\r\n            items: [ action.payload.post,...state.data.posts.items]\r\n          }\r\n        }\r\n      }\r\n\r\n    case types.UPDATE_NEWSFEED_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data:{\r\n          ...state.data,\r\n          posts: {\r\n            ...state.data.posts,\r\n            items: state.data.posts.items.map((post) => post._id === action.payload.post._id ? {...post, ...action.payload.post} : {...post})\r\n          }\r\n        }\r\n      }\r\n\r\n    case types.FETCH_ACTIVE_FRIENDS: \r\n      return {\r\n        ...state,\r\n        data:{\r\n          ...state.data,\r\n          activeFriends: action.payload\r\n        }\r\n      }\r\n\r\n    case types.UPDATE_ACTIVE_FRIEND:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          activeFriends: [...state.data.activeFriends, action.payload]\r\n        }\r\n      }\r\n    \r\n    case types.DELETE_ACTIVE_FRIEND:\r\n\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          activeFriends: [...state.data.activeFriends.filter(f => f._id !== action.payload)]\r\n        }\r\n      }\r\n    default: return state\r\n  }\r\n}","import * as types from '../types'\r\n\r\nconst initialState = {\r\n  socket: null,\r\n  socketConnected: false\r\n}\r\n\r\nexport default function Socket(state = initialState, action = { }){\r\n  switch (action.type){\r\n    case types.OPEN_NEW_SOCKET:\r\n      return {\r\n        ...state,\r\n        socket: action.payload,\r\n        socketConnected:true\r\n      }\r\n\r\n    case types.CLOSE_SOCKET:\r\n      return {\r\n        ...state,\r\n        socket: null,\r\n        socketConnected: false\r\n      }\r\n\r\n      \r\n    default: return state\r\n  }\r\n  \r\n}","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  userLoggedIn: false,\r\n  user: null,\r\n};\r\n\r\nexport default function Auth(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: action.payload,\r\n        userLoggedIn: true,\r\n      };\r\n\r\n    case types.LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        token: \"\",\r\n        userLoggedIn: false,\r\n      };\r\n\r\n    case types.FETCH_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../types\";\r\n\r\nconst initialState = {\r\n  inbox: [],\r\n};\r\n\r\nconst MAX_INBOXS = 3;\r\n\r\nexport default function Chat(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.OPEN_CHAT:\r\n      var index = state.inbox.findIndex(\r\n        (c) => c.guest._id === action.payload.guest._id\r\n      );\r\n      if (index === -1) {\r\n        if (state.inbox.length < MAX_INBOXS) {\r\n          return {\r\n            ...state,\r\n            inbox: [...state.inbox, action.payload],\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            inbox: [...state.inbox.slice(1), action.payload],\r\n          };\r\n        }\r\n      } else {\r\n        return state;\r\n      }\r\n    case types.UPDATE_CHAT:\r\n      return {\r\n        ...state,\r\n        inbox: state.inbox.map((inb) =>\r\n          inb._id === action.payload._id\r\n            ? {\r\n                ...inb,\r\n                messages: [\r\n                  ...inb.messages,\r\n                  action.payload.messages[action.payload.messages.length - 1],\r\n                ],\r\n              }\r\n            : { ...inb }\r\n        ),\r\n      };\r\n    case types.CLOSE_CHAT:\r\n      var index = state.inbox.findIndex(\r\n        (c) => c.guest._id === action.payload.guest._id\r\n      );\r\n      return {\r\n        ...state,\r\n\r\n        inbox: [\r\n          ...state.inbox.slice(0, index),\r\n          ...state.inbox.slice(index + 1),\r\n        ],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux'\r\n\r\nimport NewsFeed from './reducers/NewsFeedReducer'\r\nimport Socket from './reducers/SocketReducer'\r\nimport Auth from './reducers/AuthReducer'\r\nimport Chat from './reducers/ChatsReducer'\r\n\r\nexport default combineReducers ({\r\n  NewsFeed,\r\n  Socket,\r\n  Auth,\r\n  Chat\r\n})\r\n\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport combineReducers from './combineReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nexport const store = createStore(\r\n  combineReducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter, Router} from 'react-router-dom';\r\nimport {history} from './history';\r\n\r\nimport './index.scss';\r\nimport {store} from './redux/reduxStore';\r\nimport {ThemeProvider} from 'styled-components';\r\nimport theme from './styles/theme';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.REACT_APP_PUBLIC_URL} history={history}>\r\n        <App/>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}